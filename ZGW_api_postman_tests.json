{
	"info": {
		"_postman_id": "17060def-158b-44d1-9c70-36404cba8682",
		"name": "ZGW api tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27978063"
	},
	"item": [
		{
			"name": "Tests",
			"item": [
				{
					"name": "standaard.md",
					"item": [
						{
							"name": "ac",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Generate JWT for collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"  const extractedValue = pm.response.json().authorization",
															"  var bearer_and_token = extractedValue.split(' ');",
															"  var jwt_token = bearer_and_token[1]",
															"pm.globals.set(\"jwt_token\",jwt_token)",
															"pm.globals.set(\"jwt_token_without_claims\",jwt_token)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientIds\": [\n    \"allthescopesarebelongtous222223132532\"\n  ],\n  \"secret\": \"sosecret\",\n  \"label\": \"user\",\n  \"heeftAlleAutorisaties\": true,\n  \"autorisaties\": []\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete existing Applicaties for client_id_limited",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var results = pm.response.json().results;",
															"",
															"for(i=0; i<results.length; i++) {",
															"    if(results[i].clientIds.includes(pm.environment.get(\"client_id_limited\"))) {",
															"        pm.sendRequest({",
															"            \"url\": results[i].url,",
															"            \"method\": \"DELETE\",",
															"            \"header\": {",
															"                \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"            }",
															"        });   ",
															"    }",
															"}",
															"",
															"pm.globals.unset(\"selectielijst_page\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ac_url}}/applicaties?clientIds={{client_id_limited}}",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													],
													"query": [
														{
															"key": "clientIds",
															"value": "{{client_id_limited}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(AC) Retrieve existing Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");",
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"if(pm.response.json().count) {",
															"    var catalogus = pm.response.json().results[0];",
															"    pm.globals.set(\"catalogus_url\", catalogus.url);",
															"    postman.setNextRequest(\"(AC) Get Selectielijstklassen and Procestypen\");",
															"    ",
															"    if(catalogus.besluittypen) {",
															"        for(i=0; i<catalogus.besluittypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.besluittypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"besluittype_url\", catalogus.besluittypen[0]);",
															"    }",
															"    if(catalogus.informatieobjecttypen) {",
															"        for(i=0; i<catalogus.informatieobjecttypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.informatieobjecttypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"    if(catalogus.zaaktypen) {",
															"        for(i=0; i<catalogus.zaaktypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.zaaktypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ztc_url}}/catalogussen?domein=ZGWT",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													],
													"query": [
														{
															"key": "domein",
															"value": "ZGWT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"catalogus_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"domein\": \"ZGWT\",\n\t\"rsin\": \"000000000\",\n\t\"contactpersoonBeheerNaam\": \"Test Persoon\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(AC) Get Selectielijstklassen and Procestypen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.globals.get(\"selectielijst_page\") == 1) {",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_nihil_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\");",
															"}",
															"",
															"if(pm.response.code == 200) {",
															"    var results = pm.response.json().results;",
															"    for(i=0; i<results.length; i++) {",
															"        if(results[i].procestermijn == \"nihil\" && !pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_nihil_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_nihil_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"ingeschatte_bestaansduur_procesobject\" && !pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"vast_te_leggen_datum\" && !pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\", results[i].url);",
															"            pm.globals.set(\"selectielijstklasse_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_vast_te_leggen_datum_url\", results[i].procesType);",
															"            pm.globals.set(\"procestype_url\", results[i].procesType);",
															"        }",
															"    }",
															"}",
															"",
															"if(!(",
															"        pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")",
															"    ) && pm.response.json().next",
															") {",
															"    pm.globals.set(\"selectielijst_page\", pm.globals.get(\"selectielijst_page\") + 1)",
															"    postman.setNextRequest(\"(AC) Get Selectielijstklassen and Procestypen\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(!pm.globals.get(\"selectielijst_page\")) pm.globals.set(\"selectielijst_page\", 1)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaten?page={{selectielijst_page}}",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaten"
													],
													"query": [
														{
															"key": "page",
															"value": "{{selectielijst_page}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(AC) Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InformatieObjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"informatieobject\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\",\n    \"informatieobjectcategorie\": \"document\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var res = pm.response.json();",
															"pm.globals.set(\"zaaktype_url\", res.url);",
															"pm.globals.set(\"zaaktype_vertrouwelijkheid\", res.vertrouwelijkheidaanduiding);",
															"pm.globals.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
															"pm.globals.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
															"pm.globals.set(\"zaaktype_eigenschap\", res.eigenschappen[0]);",
															"pm.globals.set(\"zaaktype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"1\",\n    \"omschrijving\": \"ac_tests_1\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"verantwoordelijke\": \"Organisatie eenheid X\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": false,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n        \"http://localhost:8002/api/v1/statustypen/ecb7fc03-5c11-46be-917f-e70e16c77554\",\n        \"http://localhost:8002/api/v1/statustypen/14734ec8-04f8-4c18-a009-e190ff448ca9\"\n    ],\n    \"resultaattypen\": [\n        \"http://localhost:8002/api/v1/resultaattypen/eead9dcd-9544-4862-8a03-b55643f95228\"\n    ],\n    \"eigenschappen\": [\n        \"http://localhost:8002/api/v1/eigenschappen/d417bd46-a2a8-46d7-bb8c-4c8dc214301b\"\n    ],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [\n        \"{{besluittype_url}}\"\n    ],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete existing test Applicatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var results = pm.response.json().results;",
															"",
															"for(i=0; i<results.length; i++) {",
															"    if(results[i].clientIds.includes(\"test_id1\")) {",
															"        pm.sendRequest({",
															"            \"url\": results[i].url,",
															"            \"method\": \"DELETE\",",
															"            \"header\": {",
															"                \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"            }",
															"        });   ",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ac_url}}/applicaties?clientIds=test_id1",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													],
													"query": [
														{
															"key": "clientIds",
															"value": "test_id1"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "(ac-001)",
									"item": [
										{
											"name": "(ac-001a) Applicatie aanmaken met meerdere clientIds is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met meerdere clientIds geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"",
															"    var clientIds = pm.response.json().clientIds;",
															"    ",
															"    pm.expect(clientIds[0]).to.be.equal(\"test_id1\");",
															"    pm.expect(clientIds[1]).to.be.equal(\"test_id2\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"applicatie_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"test_id1\",\n\t\t\"test_id2\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.lezen\"\n            ],\n            \"zaaktype\": \"{{zaaktype_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"openbaar\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ac-001b) Applicatie aanmaken met al gebruikte client_id is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken een client_id die al gebruikt is voor een andere applicatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"clientIds\");",
															"    pm.expect(error.code).to.be.equal(\"clientId-exists\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    ",
															"    if(pm.globals.get(\"applicatie_url\")) {",
															"        pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete created Applicatie\"]);   ",
															"    } else {",
															"        pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-002a) Applicatie aanmaken met heeftAlleAutorisaties en expliciete autorisaties is niet mogelijk\"]);",
															"    }",
															"} else {",
															"    if(!pm.globals.get(\"applicatie_url\")) {",
															"        postman.setNextRequest(\"(ac-002a) Applicatie aanmaken met heeftAlleAutorisaties en expliciete autorisaties is niet mogelijk\");",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\"{{pm.globals.get('random_client_id')}}\"],\n\t\"label\": \"Test applicatie\",\n\t\"heeftAlleAutorisaties\": true,\n\t\"autorisaties\": []\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete created Applicatie",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{applicatie_url}}",
													"host": [
														"{{applicatie_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "(ac-002)",
									"item": [
										{
											"name": "(ac-002a) Applicatie aanmaken met heeftAlleAutorisaties en expliciete autorisaties is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met heeftAlleAutorisaties op true en expliciet meegegeven autorisaties geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"ambiguous-authorizations-specified\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-002b) Applicatie aanmaken met heeftAlleAutorisaties false en geen autorisaties is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_client_id\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"{{random_client_id}}\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"heeftAlleAutorisaties\": true,\n\t\"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.lezen\"\n            ],\n            \"zaaktype\": \"{{zaaktype_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"openbaar\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ac-002b) Applicatie aanmaken met heeftAlleAutorisaties false en geen autorisaties is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met heeftAlleAutorisaties false en geen expliciet meegegeven autorisaties geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"missing-authorizations\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-003a) Autorisatie met component zrc scope m.b.t. zaken en zonder maxVertrouwelijkheidaanduiding en zaaktype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"test_id4\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"heeftAlleAutorisaties\": false,\n\t\"autorisaties\": []\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "(ac-003)",
									"item": [
										{
											"name": "(ac-003a) Autorisatie met component zrc scope m.b.t. zaken en zonder maxVertrouwelijkheidaanduiding en zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met Autorisatie met component zrc en scope m.b.t. zaken zonder maxVertrouwelijkheidaanduiding en zaaktype is onmogelijk\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var errors = pm.response.json().invalidParams;",
															"    errors.sort((a, b) => (a.name > b.name) ? 1 : -1);",
															"    ",
															"    pm.expect(errors[0].name).to.be.equal(\"autorisaties.0.maxVertrouwelijkheidaanduiding\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"autorisaties.0.zaaktype\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-003b) Autorisatie met component zrc zonder scope m.b.t. zaken en zonder maxVertrouwelijkheidaanduiding en zaaktype is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"test_id3\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.lezen\"\n            ],\n            \"zaaktype\": \"\",\n            \"maxVertrouwelijkheidaanduiding\": \"\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ac-003b) Autorisatie met component zrc zonder scope m.b.t. zaken en zonder maxVertrouwelijkheidaanduiding en zaaktype is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met Autorisatie met component zrc zonder scope m.b.t. zaken en zonder maxVertrouwelijkheidaanduiding en zaaktype is mogelijk\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-003c) Autorisatie met component drc scope m.b.t. documenten en zonder maxVertrouwelijkheidaanduiding en informatieobjecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_client_id\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"{{random_client_id}}\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"notificaties.publiceren\"\n            ],\n            \"zaaktype\": \"\",\n            \"maxVertrouwelijkheidaanduiding\": \"\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ac-003c) Autorisatie met component drc scope m.b.t. documenten en zonder maxVertrouwelijkheidaanduiding en informatieobjecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met Autorisatie met component drc en scope m.b.t. documenten zonder maxVertrouwelijkheidaanduiding en informatieobjecttype is onmogelijk\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var errors = pm.response.json().invalidParams;",
															"    errors.sort((a, b) => (a.name > b.name) ? 1 : -1);",
															"    ",
															"    pm.expect(errors[0].name).to.be.equal(\"autorisaties.0.informatieobjecttype\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"autorisaties.0.maxVertrouwelijkheidaanduiding\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-003d) Autorisatie met component drc zonder scope m.b.t. documenten en zonder maxVertrouwelijkheidaanduiding en informatieobjecttype is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"test_id3\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"autorisaties\": [\n        {\n            \"component\": \"drc\",\n            \"componentWeergave\": \"Documentregistratiecomponent\",\n            \"scopes\": [\n                \"documenten.lezen\"\n            ],\n            \"informatieobjecttype\": \"\",\n            \"maxVertrouwelijkheidaanduiding\": \"\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ac-003d) Autorisatie met component drc zonder scope m.b.t. documenten en zonder maxVertrouwelijkheidaanduiding en informatieobjecttype is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met Autorisatie met component drc zonder scope m.b.t. documenten zonder maxVertrouwelijkheidaanduiding en informatieobjecttype is mogelijk\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ac-003e) Autorisatie met component brc scope m.b.t. besluiten en zonder besluittype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_client_id\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"{{random_client_id}}\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"autorisaties\": [\n        {\n            \"component\": \"drc\",\n            \"componentWeergave\": \"Documentregistratiecomponent\",\n            \"scopes\": [\n                \"notificaties.publiceren\"\n            ],\n            \"informatieobjecttype\": \"\",\n            \"maxVertrouwelijkheidaanduiding\": \"\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ac-003f) Autorisatie met component brc zonder scope m.b.t. besluiten en zonder besluittype is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Applicatie aanmaken met Autorisatie met component brc zonder scope m.b.t. besluiten zonder besluittype is mogelijk\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_applicatie_url\", pm.response.json().url)",
															"    postman.setNextRequest(\"(COMMON) Delete Applicatie\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(AC) Delete Zaaktype\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_client_id\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientIds\": [\n\t\t\"{{random_client_id}}\"\n\t],\n\t\"label\": \"Test applicatie\",\n\t\"autorisaties\": [\n        {\n            \"component\": \"brc\",\n            \"componentWeergave\": \"Besluitregistratiecomponent\",\n            \"scopes\": [\n                \"notificaties.publiceren\"\n            ],\n            \"besluittype\": \"\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "(AC) Delete Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_url}}",
													"host": [
														"{{zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(AC) Delete Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluittype_url}}",
													"host": [
														"{{besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(AC) Delete Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"// Continue to the zrc tests",
															"postman.setNextRequest(\"(ZRC) Retrieve existing Catalogus\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Delete Applicatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_applicatie_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_applicatie_url}}",
													"host": [
														"{{created_applicatie_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									]
								}
							],
							"description": "Bevat alle business logic tests voor het Autorisatiecomponent (AC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "zrc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Generate JWT for collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"  const extractedValue = pm.response.json().authorization",
															"  var bearer_and_token = extractedValue.split(' ');",
															"  var jwt_token = bearer_and_token[1]",
															"pm.globals.set(\"jwt_token\",jwt_token)",
															"pm.globals.set(\"jwt_token_without_claims\",jwt_token)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientIds\": [\n    \"allthescopesarebelongtous222223132532\"\n  ],\n  \"secret\": \"sosecret\",\n  \"label\": \"user\",\n  \"heeftAlleAutorisaties\": true,\n  \"autorisaties\": []\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Retrieve existing Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");",
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"if(pm.response.json().count) {",
															"    var catalogus = pm.response.json().results[0];",
															"    pm.globals.set(\"catalogus_url\", pm.response.json().results[0].url);",
															"    postman.setNextRequest(\"(ZRC) Get Selectielijstklassen and Procestypen\");",
															"    ",
															"    if(catalogus.besluittypen) {",
															"        for(i=0; i<catalogus.besluittypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.besluittypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"besluittype_url\", catalogus.besluittypen[0]);",
															"    }",
															"    if(catalogus.informatieobjecttypen) {",
															"        for(i=0; i<catalogus.informatieobjecttypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.informatieobjecttypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"    if(catalogus.zaaktypen) {",
															"        for(i=0; i<catalogus.zaaktypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.zaaktypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.unset(\"selectielijst_page\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ztc_url}}/catalogussen?domein=ZGWT",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													],
													"query": [
														{
															"key": "domein",
															"value": "ZGWT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"catalogus_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"domein\": \"ZGWT\",\n\t\"rsin\": \"000000000\",\n\t\"contactpersoonBeheerNaam\": \"Test Persoon\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Get Selectielijstklassen and Procestypen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.globals.get(\"selectielijst_page\") == 1) {",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_nihil_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\");",
															"}",
															"",
															"if(pm.response.code == 200) {",
															"    var results = pm.response.json().results;",
															"    for(i=0; i<results.length; i++) {",
															"        if(results[i].procestermijn == \"nihil\" && !pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_nihil_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_nihil_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"ingeschatte_bestaansduur_procesobject\" && !pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"vast_te_leggen_datum\" && !pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\", results[i].url);",
															"            pm.globals.set(\"selectielijstklasse_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_vast_te_leggen_datum_url\", results[i].procesType);",
															"            pm.globals.set(\"procestype_url\", results[i].procesType);",
															"        }",
															"    }",
															"}",
															"",
															"if(!(",
															"        pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")",
															"    ) && pm.response.json().next",
															") {",
															"    pm.globals.set(\"selectielijst_page\", pm.globals.get(\"selectielijst_page\") + 1)",
															"    postman.setNextRequest(\"(ZRC) Get Selectielijstklassen and Procestypen\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(!pm.globals.get(\"selectielijst_page\")) pm.globals.set(\"selectielijst_page\", 1)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaten?page={{selectielijst_page}}",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaten"
													],
													"query": [
														{
															"key": "page",
															"value": "{{selectielijst_page}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Resultaattypeomschrijving",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattypeomschrijving_url\", pm.response.json()[0].url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaattypeomschrijvingen",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaattypeomschrijvingen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InformatieObjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"informatieobject\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\",\n\t\"informatieobjectcategorie\": \"document\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Deelzaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var res = pm.response.json();",
															"pm.globals.set(\"deelzaaktype_url\", res.url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_identificatie2\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{random_identificatie2}}\",\n    \"omschrijving\": \"zrc_tests_1 deelzaaktype\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"verantwoordelijke\":\"X\",\n    \"doel\": \"test doel\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": true,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_procestermijn_nihil_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n        \n    ],\n    \"resultaattypen\": [\n    ],\n    \"eigenschappen\": [\n    ],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [\n        \"{{besluittype_url}}\"\n    ],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true,\n    \"verlengingstermijn\": \"P5D\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var res = pm.response.json();",
															"pm.globals.set(\"zaaktype_url\", res.url);",
															"pm.globals.set(\"zaaktype_vertrouwelijkheid\", res.vertrouwelijkheidaanduiding);",
															"pm.globals.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
															"pm.globals.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
															"pm.globals.set(\"zaaktype_eigenschap\", res.eigenschappen[0]);",
															"pm.globals.set(\"zaaktype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_identificatie\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{random_identificatie}}\",\n    \"omschrijving\": \"zrc_tests_1\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"verantwoordelijke\":\"X\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": true,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_procestermijn_nihil_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"deelzaaktypen\": [\n        \"{{deelzaaktype_url}}\"\n    ],\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n       \n    ],\n    \"resultaattypen\": [\n    ],\n    \"eigenschappen\": [\n    ],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [\n        \"{{besluittype_url}}\"\n    ],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true,\n    \"verlengingstermijn\": \"P5D\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Create Zaaktype-InformatieObjectType relation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"informatieobjecttype\": \"informatieobject\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktype-informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Eigenschap",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaaktype_eigenschap\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"naam\": \"test eigenschap\",\n\t\"definitie\": \"for test\",\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/eigenschappen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"eigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Resultaattype afleidingswijze afgehandeld",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"Klaar\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create begin Statustype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"non_eindstatustype\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"Begin\",\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"volgnummer\": 1\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/statustypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"statustypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create eind Statustype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"eindstatustype\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"volgnummer\": 2\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/statustypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"statustypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Roltype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"roltype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"omschrijvingGeneriek\": \"adviseur\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/roltypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"roltypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{besluittype_url}}/publish",
													"host": [
														"{{besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Informatieobjecttype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{informatieobjecttype_url}}/publish",
													"host": [
														"{{informatieobjecttype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Deelzaaktype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{deelzaaktype_url}}/publish",
													"host": [
														"{{deelzaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{zaaktype_url}}/publish",
													"host": [
														"{{zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Create EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Gebruiksrechten to EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject with indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobject_gebruiksrecht_null_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n\t\"indicatieGebruiksrecht\": null,\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-001",
									"item": [
										{
											"name": "(zrc-001a) Zaak aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    var zaak = pm.response.json();",
															"    pm.globals.set(\"zaak_url\", zaak.url);",
															"    pm.globals.set(\"zaak_id\", zaak.identificatie);",
															"    pm.globals.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
															"    pm.globals.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
															"    pm.globals.set(\"zaak_body\", pm.request.body.raw);   ",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-20\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"betalingsindicatie\": \"geheel\",\n    \"laatsteBetaalDatum\": \"2019-01-01\",\n    \"zaakgeometrie\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            53,\n            5\n        ]\n    },\n    \"opschorting\": {\n        \"indicatie\": true,\n        \"reden\": \"string\"\n    },\n    \"selectielijstklasse\": \"{{selectielijstklasse_url}}\",\n    \"archiefstatus\": \"nog_te_archiveren\",\n    \"deelzaaktypen\" : [\"{{deelzaaktype_url}}\"]\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001b) Zaak bijwerken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Zaak bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().omschrijving).to.be.equal(pm.globals.get(\"omschrijving\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"pm.globals.set(\"omschrijving\", \"aangepaste omschrijving\");",
															"body.omschrijving = pm.globals.get(\"omschrijving\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001c) Zaak deels bijwerken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide zaaktype url geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.globals.get(\"toelichting\"));",
															"});",
															"",
															"pm.test(\"Zaak deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.globals.get(\"toelichting\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"toelichting\", \"aangepaste toelichting\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"toelichting\": \"{{toelichting}}\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001d) Zaak aanmaken met ongeldige zaaktype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-001e) Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001e) Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-001f) Zaak met zaaktype bijwerken is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype for Zaak updates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"TEMP\"",
															"body.besluittypen = [];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));",
															"",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_identificatie3\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{random_identificatie3}}\",\n    \"omschrijving\": \"zrc_tests_1\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"verantwoordelijke\":\"X\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": true,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_procestermijn_nihil_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"deelzaaktypen\": [\n        \"{{deelzaaktype_url}}\"\n    ],\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n       \n    ],\n    \"resultaattypen\": [\n    ],\n    \"eigenschappen\": [\n    ],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [\n        \"{{besluittype_url}}\"\n    ],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true,\n    \"verlengingstermijn\": \"P5D\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001f) Zaak aanmaken met concept zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met concept zaaktype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"not-published\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Publish temp Zaaktype\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.globals.get(\"temp_zaaktype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish temp Zaaktype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}/publish",
													"host": [
														"{{temp_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete temp Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}",
													"host": [
														"{{temp_zaaktype_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-002",
									"item": [
										{
											"name": "(zrc-002a) Zaak aanmaken met bestaande combinatie identificatie en bronorganisatie is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.identificatie = pm.globals.get(\"zaak_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak with unique identificatie and bronorganisatie\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak with unique identificatie and bronorganisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												},
												"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
											},
											"response": []
										},
										{
											"name": "(zrc-002b) Zaak bijwerken met bestaande combinatie identificatie en bronorganisatie is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.identificatie = pm.globals.get(\"zaak_id\");",
															"body.bronorganisatie = pm.globals.get(\"zaak_bronorganisatie\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-002c) Zaak deels bijwerken met bestaande combinatie identificatie en bronorganisatie is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.identificatie = pm.globals.get(\"zaak_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Zaken for bronorganisatie\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{zaak_id}}\",\n\t\"bronorganisatie\": \"{{zaak_bronorganisatie}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Zaken for bronorganisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaken_for_bronorganisatie\", pm.response.json().results);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{zrc_url}}/zaken?bronorganisatie={{zaak_bronorganisatie}}",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													],
													"query": [
														{
															"key": "bronorganisatie",
															"value": "{{zaak_bronorganisatie}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-002d) Genereer unieke identificatie voor Zaak onder bronorganisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
															"    var created_zaak_id = pm.response.json().identificatie",
															"    ",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    ",
															"    pm.response.to.have.status(201);",
															"    ",
															"    // Compare the identificatie of the created Zaak with all the identificaties of other Zaken",
															"    // with the same bronorganisatie",
															"    var zaken_with_same_id = pm.globals.get(\"zaken_for_bronorganisatie\").filter(zaak => zaak.identificatie === created_zaak_id);",
															"    ",
															"    // Verify that the identificatie for the created Zaak isn't the same as any other",
															"    pm.expect(zaken_with_same_id.length).to.be.equal(0);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-003a) ZaakInformatieObject aanmaken is mogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-003",
									"item": [
										{
											"name": "(zrc-003a) ZaakInformatieObject aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"zaakinformatieobject_body\", pm.request.body.raw);",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"titel\": \"test\",\n\t\"beschrijving\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-003b) ZaakInformatieObject bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"pm.globals.set(\"beschrijving\", \"aangepaste beschrijving\");",
															"body.beschrijving = pm.globals.get(\"beschrijving\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().beschrijving).to.be.equal(pm.globals.get(\"beschrijving\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-003c) ZaakInformatieObject deels bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"titel\", \"aangepaste titel\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().titel).to.be.equal(pm.globals.get(\"titel\"));",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-003d) ZaakInformatieObject aanmaken met ongeldige informatieobject url is onmogelijk\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"titel\": \"{{titel}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-003d) ZaakInformatieObject aanmaken met ongeldige informatieobject url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken met informatieobject url die niet resulteert in 200 geeft 404\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that error was thrown for correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-004a) ZaakInformatieObject aanmaken zet aard_relatie op hoort_bij\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{mock_url}}/404\",\n\t\"titel\": \"test\",\n\t\"beschrijving\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-004",
									"item": [
										{
											"name": "(zrc-004a) ZaakInformatieObject aanmaken zet aard_relatie op hoort_bij en registratiedatum op nu",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken zet aardRelatie op legt_vast\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Hoort bij\");",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken zet registratiedatum op moment van aanmaken\", function() {",
															"    pm.expect(pm.response.json().registratiedatum).to.include(moment.utc().format(\"YYYY-MM-DD\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"zaakinformatieobject_body\", pm.request.body.raw)",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"registratiedatum\": \"1900-01-01\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004b) ZaakInformatieObject bijwerken relatie aanpassen is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken relatie aanpassen is niet mogelijk\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Hoort bij\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.aardRelatieWeergave = \"aangepast\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004c) ZaakInformatieObject deels bijwerken relatie aanpassen is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken relatie aanpassen is niet mogelijk\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Hoort bij\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"aardRelatieWeergave\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create different Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004d) ZaakInformatieObject bijwerken zaak aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken zaak aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaak\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.zaak = pm.globals.get(\"created_zaak_url\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004e) ZaakInformatieObject deels bijwerken zaak aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken zaak aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaak\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.zaak = pm.globals.get(\"created_zaak_url\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004f) ZaakInformatieObject bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.informatieobject = pm.globals.get(\"informatieobject_gebruiksrecht_null_url\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004g) ZaakInformatieObject deels bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete different Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaak_url\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create ZaakInformatieObject\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-005",
									"item": [
										{
											"name": "Create ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaakinformatieobject_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-005a) ZaakInformatieObject aanmaken maakt ObjectInformatieObject aan met objectType zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken maakt een ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(jsonData.length).to.be.equal(1);",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken maakt een ObjectInformatieObject met objectType zaak\", function() {",
															"    pm.expect(jsonData[0].objectType).to.be.equal(\"zaak\");",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken maakt een ObjectInformatieObject met correcte zaak en informatieobject\", function() {",
															"    pm.expect(jsonData[0].object).to.be.equal(pm.globals.get(\"zaak_url\"));",
															"    pm.expect(jsonData[0].informatieobject).to.be.equal(pm.globals.get(\"informatieobject_url\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete ZaakInformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-005b) ZaakInformatieObject verwijderen verwijdert ObjectInformatieObject uit DRC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject verwijderen verwijdert ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().length).to.be.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-006 Copy",
									"item": [
										{
											"name": "Create authorized Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaaktype_for_auth_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.besluittypen = [];",
															"body.omschrijving = \"Zaaktype for auth tests\";",
															"body.identificatie = 2;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish authorized Zaaktype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{zaaktype_for_auth_url}}/publish",
													"host": [
														"{{zaaktype_for_auth_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Applicatie for Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"autorisaties_zaaktype\", pm.globals.get(\"zaaktype_for_auth_url\"));",
															"pm.globals.set(\"autorisaties_maxVertrouwelijkheidaanduiding\", \"openbaar\")",
															"pm.globals.set(\"jwt-zrc-006\", pm.response.json().authorization.split(\" \")[1])"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"client_id_gen_1\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clientIds\": [\n        \"{{client_id_gen_1}}\"\n    ],\n    \"label\": \"Demo User with limited access\",\n    \"heeftAlleAutorisaties\": false,\n    \"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.lezen\",\n                \"zaken.aanmaken\"\n            ],\n            \"zaaktype\": \"{{zaaktype_for_auth_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"openbaar\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create authorized Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.globals.get(\"zaaktype_for_auth_url\");",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"autorisaties_maxVertrouwelijkheidaanduiding\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"authorized_zaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-006}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak with different Zaaktype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// // Retrieve the Zaak body template and modify as needed",
															"// var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"// body.zaaktype = pm.globals.get(\"zaaktype_for_auth_url\");",
															"",
															"// // Store the modified Zaak body, allowing it to be used in the main request",
															"// pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaak_with_different_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak with higher vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = \"intern\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaak_with_higher_vertrouwelijkheidaanduiding_url\", pm.response.json().url);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-006a) Zaken lijst ontsluit zaken op basis van autorisaties van consumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Zaken lijst laat geen zaken zien met zaaktypes buiten autorisatie van consumer\", function() {",
															"    var zaken_with_zaaktypes_outside_autorisatie = response.results.some(item => item.zaaktype !== pm.globals.get(\"autorisaties_zaaktype\"));",
															"    pm.expect(zaken_with_zaaktypes_outside_autorisatie).to.be.equal(false);",
															"    ",
															"    var zaken_with_zaaktypes_inside_autorisatie = response.results.some(item => item.zaaktype === pm.globals.get(\"autorisaties_zaaktype\"));",
															"    pm.expect(zaken_with_zaaktypes_inside_autorisatie).to.be.equal(true);",
															"});",
															"",
															"pm.test(\"Zaken lijst laat geen zaken zien met vertrouwelijkheidaanduiding hoger dan maxVertrouwelijkheidaanduiding in autorisatie van consumer\", function() {",
															"    var zaken_with_greater_vertrouwelijkheidaanduiding = response.results.some(item => item.vertrouwelijkheidaanduiding !== pm.globals.get(\"autorisaties_maxVertrouwelijkheidaanduiding\"));",
															"    pm.expect(zaken_with_greater_vertrouwelijkheidaanduiding).to.be.equal(false);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-006}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Applicatie from AC",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{applicatie_url}}",
													"host": [
														"{{applicatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Applicatie without zaken.aanmaken/zaken.lezen for zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"autorisaties_zaaktype\", pm.globals.get(\"zaaktype_for_auth_url\"));",
															"pm.globals.set(\"autorisaties_maxVertrouwelijkheidaanduiding\", \"openbaar\")",
															"pm.globals.set(\"jwt-zrc-006_2\", pm.response.json().authorization.split(\" \")[1])"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"client_id_gen_2\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\n{\n    \"clientIds\": [\n        \"{{client_id_gen_2}}\"\n    ],\n    \"label\": \"Demo User with limited access\",\n    \"heeftAlleAutorisaties\": false,\n    \"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.bijwerken\"\n            ],\n            \"zaaktype\": \"{{zaaktype_for_auth_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"openbaar\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-006b) Zaken lezen zonder verplichte scope in autorisatie niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaken lezen zonder applicatie met zaken.lezen in autorisatie scopes geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-006_2}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-006c) Zaak aanmaken zonder verplichte scope in autorisatie niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"autorisaties_maxVertrouwelijkheidaanduiding\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met applicatie zonder zaken.aanmaken in autorisatie scopes niet toegestaan\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});",
															"",
															"var next_requests = [];",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    next_requests.push(\"Delete Applicatie from AC\");",
															"    if(pm.globals.get(\"authorized_zaak_url\")) {",
															"        next_requests.unshift(\"Delete authorized Zaak\");",
															"    }",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", next_requests);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-006_2}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete authorized Zaak",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{authorized_zaak_url}}",
													"host": [
														"{{authorized_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete authorized Zaaktype",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{autorisaties_zaaktype}}",
													"host": [
														"{{autorisaties_zaaktype}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete second Applicatie from AC",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{applicatie_url}}",
													"host": [
														"{{applicatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak with different Zaaktype",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_with_different_zaaktype_url}}",
													"host": [
														"{{zaak_with_different_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak with higher vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_with_higher_vertrouwelijkheidaanduiding_url}}",
													"host": [
														"{{zaak_with_higher_vertrouwelijkheidaanduiding_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-007 Copy",
									"item": [
										{
											"name": "Create Zaak to close",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Zaak and Informatieobject with gebruiksrecht not null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Eindstatus to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"eindstatus_datumStatusGezet\", pm.response.json().datumStatusGezet);",
															"pm.globals.set(\"eindstatus_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Klantcontact to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"klantcontact_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"datumtijd\": \"2019-02-20T00:00:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/klantcontacten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"klantcontacten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Rol to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"rol_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkene\": \"http://example.com/2d0815580af94ee0a15aa677aa646e1a\",\n\t\"betrokkeneType\": \"natuurlijk_persoon\",\n\t\"rolomschrijving\": \"behandelaar\",\n\t\"roltoelichting\": \"testrol\",\n\t\"roltype\": \"{{roltype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/rollen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"rollen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaakobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaakobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"objectType\": \"pand\",\n\t\"objectIdentificatie\": {\n\t\t\"identificatie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Zaakeigenschap to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaakeigenschap_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{zaaktype_eigenschap}}\",\n\t\"waarde\": \"test\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}/zaakeigenschappen",
													"host": [
														"{{created_zaak_url}}"
													],
													"path": [
														"zaakeigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007a) Zaak.einddatum volgt logisch uit eindstatus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Toevoegen eindstatus aan Zaak laat Zaak.einddatum afleiden uit status.datumStatusGezet\", function(){",
															"    pm.response.to.have.status(200);",
															"    ",
															"    // TODO error handling voor split",
															"    var einddatum = pm.response.json().einddatum;",
															"    pm.expect(pm.globals.get(\"eindstatus_datumStatusGezet\").split(\"T\")[0]).to.be.equal(einddatum);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve related Informatieobjecten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var related_informatieobjecten_urls = [];",
															"for(i=0; i<jsonData.length; i++) {",
															"    related_informatieobjecten_urls.add(jsonData[i].informatieobject);",
															"}",
															"",
															"pm.globals.set(\"related_informatieobjecten_urls\", related_informatieobjecten_urls);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten?zaak={{created_zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													],
													"query": [
														{
															"key": "zaak",
															"value": "{{created_zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Afsluiten Zaak betekent Informatieobject.indicatieGebruiksrecht gezet voor alle gerelateerde objecten\", function(){",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.not.be.equal(null);",
															"});",
															"",
															"var index = pm.globals.get(\"current_related_informatieobject_index\");",
															"",
															"if (index == pm.globals.get(\"related_informatieobjecten_urls\").length - 1) {",
															"    postman.setNextRequest(\"Create Applicatie without geforceerd bijwerken\");",
															"} else {",
															"    // Loop",
															"    pm.globals.set(\"current_related_informatieobject_index\", index + 1);",
															"    postman.setNextRequest(\"(zrc-007b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(!pm.globals.get(\"current_related_informatieobject_index\")) {",
															"    pm.globals.set(\"current_related_informatieobject_index\", 0);",
															"}",
															"",
															"pm.globals.set(\"current_related_informatieobject_url\", pm.globals.get(\"related_informatieobjecten_urls\")[pm.globals.get(\"current_related_informatieobject_index\")]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{current_related_informatieobject_url}}",
													"host": [
														"{{current_related_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Applicatie without geforceerd bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"jwt-zrc-007\", pm.response.json().authorization.split(\" \")[1])"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"client_id_gen_1\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clientIds\": [\n        \"{{client_id_gen_1}}\"\n    ],\n    \"label\": \"Demo User without geforceerd bijwerken\",\n    \"heeftAlleAutorisaties\": false,\n    \"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.lezen\",\n                \"zaken.aanmaken\",\n                \"zaken.bijwerken\"\n            ],\n            \"zaaktype\": \"{{zaaktype_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"openbaar\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007c) Afgesloten zaak bijwerken is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Afgesloten Zaak bijwerken zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007c) Afgesloten zaak deels bijwerken is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Afgesloten Zaak deels bijwerken zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});",
															"",
															"// pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create relation between Zaak and Informatieobject with gebruiksrecht null\"]);",
															"// postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007d) Klantcontact bij gesloten Zaak aanmaken niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Klantcontact aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"datumtijd\": \"2019-02-22T00:00:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/klantcontacten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"klantcontacten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007e) Resultaat bij gesloten Zaak aanmaken niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    pm.expect(pm.response.json().invalidParams[0].code).to.be.equal(\"unique\");",
															"    ",
															"    // pm.response.to.have.status(403);",
															"    // pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007e) Resultaat bij gesloten Zaak bijwerken niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat bijwerken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007e) Resultaat bij gesloten Zaak deels bijwerken niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat deels bijwerken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007e) Resultaat bij gesloten Zaak verwijderen niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat verwijderen bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007f) Rol bij gesloten Zaak aanmaken niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Rol aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkene\": \"http://example.com/2d0815580af94ee0a15aa677aa646e1a\",\n\t\"betrokkeneType\": \"natuurlijk_persoon\",\n\t\"rolomschrijving\": \"behandelaar\",\n\t\"roltoelichting\": \"testrol\",\n\t\"roltype\": \"{{roltype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/rollen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"rollen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007f) Rol bij gesloten Zaak verwijderen niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Rol verwijderen bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{rol_url}}",
													"host": [
														"{{rol_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007g) Status toevoegen bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007h) ZaakInformatieObject toevoegen bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007h) ZaakInformatieObject bijwerken bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n    \"titel\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007h) ZaakInformatieObject deels bijwerken bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n    \"titel\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007h) ZaakInformatieObject verwijderen bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject verwijderen bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007i) ZaakObject toevoegen bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakObject aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"objectType\": \"pand\",\n\t\"objectIdentificatie\": {\n\t\t\"identificatie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007k) ZaakEigenschap toevoegen bij gesloten Zaak is niet toegestaan zonder scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaakeigenschap aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-007}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{zaaktype_eigenschap}}\",\n\t\"waarde\": \"test\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}/zaakeigenschappen",
													"host": [
														"{{created_zaak_url}}"
													],
													"path": [
														"zaakeigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007i) Afgesloten zaak bijwerken is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.omschrijving = \"aanpassing\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Afgesloten Zaak bijwerken met scope zaken.geforceerd-bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().omschrijving).to.be.equal(\"aanpassing\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007i) Afgesloten zaak deels bijwerken is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Afgesloten Zaak deels bijwerken zonder scope zaken.geforceerd-bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().omschrijving).to.be.equal(\"aangepast\");",
															"});",
															"",
															"// pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create relation between Zaak and Informatieobject with gebruiksrecht null\"]);",
															"// postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007j) Klantcontact bij gesloten Zaak aanmaken toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Klantcontact aanmaken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"datumtijd\": \"2019-02-22T00:00:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/klantcontacten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"klantcontacten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007k) Resultaat bij gesloten Zaak verwijderen toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat verwijderen bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 204\", function() {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007k) Resultaat bij gesloten Zaak aanmaken toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat aanmaken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007k) Resultaat bij gesloten Zaak bijwerken toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat bijwerken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(\"some stuff\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\",\n\t\"toelichting\": \"some stuff\"\n}"
												},
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007k) Resultaat bij gesloten Zaak deels bijwerken toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat deels bijwerken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(\"some more stuff\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\",\n\t\"toelichting\": \"some more stuff\"\n}"
												},
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007l) Rol bij gesloten Zaak aanmaken toegestaan toegestaan scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Rol aanmaken bij gesloten Zaak zonder scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkene\": \"http://example.com/2d0815580af94ee0a15aa677aa646e1a\",\n\t\"betrokkeneType\": \"natuurlijk_persoon\",\n\t\"rolomschrijving\": \"behandelaar\",\n\t\"roltoelichting\": \"same\",\n\t\"roltype\": \"{{roltype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/rollen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"rollen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007l) Rol bij gesloten Zaak verwijderen niet toegestaan zonder scope zaken.geforceerd-bijwerken Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Rol verwijderen bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 204\", function() {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{rol_url}}",
													"host": [
														"{{rol_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007m) Status toevoegen bij gesloten Zaak is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status aanmaken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007n) ZaakInformatieObject verwijderen bij gesloten Zaak is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject verwijderen bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 204\", function() {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007n) ZaakInformatieObject toevoegen bij gesloten Zaak is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject aanmaken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007n) ZaakInformatieObject bijwerken bij gesloten Zaak is toegestaan scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().titel).to.be.equal(\"aangepast\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n    \"titel\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007n) ZaakInformatieObject deels bijwerken bij gesloten Zaak is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().titel).to.be.equal(\"en nog een keer\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n    \"titel\": \"en nog een keer\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007o) ZaakObject toevoegen bij gesloten Zaak is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakObject aanmaken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"objectType\": \"pand\",\n\t\"objectIdentificatie\": {\n\t\t\"identificatie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007p) ZaakEigenschap toevoegen bij gesloten Zaak is toegestaan met scope zaken.geforceerd-bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaakeigenschap aanmaken bij gesloten Zaak met scope zaken.geforceerd-bijwerken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create relation between Zaak and Informatieobject with gebruiksrecht null\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{zaaktype_eigenschap}}\",\n\t\"waarde\": \"test\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}/zaakeigenschappen",
													"host": [
														"{{created_zaak_url}}"
													],
													"path": [
														"zaakeigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Zaak and Informatieobject with gebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url)"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007q) Eindstatus toevoegen aan Zaak met Informatieobject.indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Eindstatus toevoegen aan Zaak met gerelateerd Informatieobject met indicatieGebruiksrecht null geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()['invalidParams'][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"indicatiegebruiksrecht-unset\");",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Add non-Eindstatus to Zaak\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:37:01\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add non-Eindstatus to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:39:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007r) Zaak.einddatum leeg als geen eindstatus gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Toevoegen status die geen eindstatus is aan Zaak betekent Zaak.einddatum leeg\", function(){",
															"    pm.response.to.have.status(200);",
															"    ",
															"    var einddatum = pm.response.json().einddatum;",
															"    pm.expect(einddatum).to.be.equal(null);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete Applicatie without geforceerd bijwerken\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Applicatie without geforceerd bijwerken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{applicatie_url}}",
													"host": [
														"{{applicatie_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-008",
									"item": [
										{
											"name": "Create Zaak to close and reopen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Eindstatus to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-008a) Zaak heropenen is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Non-eindstatus aan gesloten Zaak toevoegen geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    ",
															"    pm.expect(pm.response.json().statustype).to.be.equal(pm.globals.get(\"non_eindstatustype\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-21T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-008b) Zaak heropenen zet einddatum, archiefactiedatum en archiefnominatie op null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak heropenen zet einddatum, archiefactiedatum en archiefnominatie op null\", function() {",
															"    var response = pm.response.json();",
															"    ",
															"    pm.expect(response.einddatum).to.be.equal(null);",
															"    pm.expect(response.archiefactiedatum).to.be.equal(null);",
															"    pm.expect(response.archiefnominatie).to.be.equal(null); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Eindstatus to Zaak again",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Applicatie without zaak.heropenen scope",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"jwt-zrc-008\", pm.response.json().authorization.split(\" \")[1])"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"client_id_gen_1\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clientIds\": [\n        \"{{client_id_gen_1}}\"\n    ],\n    \"label\": \"Applicatie without heropenen\",\n    \"heeftAlleAutorisaties\": false,\n    \"autorisaties\": [\n        {\n            \"component\": \"zrc\",\n            \"componentWeergave\": \"Zaakregistratiecomponent\",\n            \"scopes\": [\n                \"zaken.lezen\",\n                \"zaken.aanmaken\",\n                \"zaken.statussen.toevoegen\"\n            ],\n            \"zaaktype\": \"{{zaaktype_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"openbaar\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-008c) Zaak heropenen zonder scope zaken.heropenen in Applicatie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak heropenen zonder scope zaken.heropenen in Applicatie geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"    pm.expect(pm.response.json().code).to.be.equal(\"permission_denied\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt-zrc-008}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-21T17:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-009",
									"item": [
										{
											"name": "(zrc-009a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij aanmaken Zaak moet toegekend worden aan Zaak\", function() {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheid\"));",
															"    ",
															"    pm.globals.set(\"created_zaak_url\", jsonData.url);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheid\", \"zeer_geheim\");",
															"",
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheid\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009b) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PUT)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheid\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheid\", \"intern\");",
															"",
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheid\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009c) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PATCH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij deels bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheid\"));",
															"});",
															"",
															"",
															"if(pm.globals.get(\"created_zaak_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-009d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheid\", \"vertrouwelijk\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheid}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = pm.globals.get(\"zaak_body\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Vertrouwelijkheidaanduiding bij aanmaken Zaak afgeleid uit Zaaktype indien niet meegegeven\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"zaaktype_vertrouwelijkheid\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010a) Valideren communicatiekanaal url bij aanmaken Zaak\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-010",
									"item": [
										{
											"name": "(zrc-010a) Valideren communicatiekanaal url bij aanmaken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met ongeldige communicatiekanaal url geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010b) Valideren communicatiekanaal url bij bijwerken Zaak\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010b) Valideren communicatiekanaal url bij bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010c) Valideren communicatiekanaal url bij deels bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010d) Valideren communicatiekanaal-resource bij aanmaken Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010e) Valideren communicatiekanaal url bij bijwerken Zaak\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010e) Valideren communicatiekanaal-resource bij bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010f) Valideren communicatiekanaal-resource bij deels bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/200\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010g) Zaak aanmaken met valide communicatiekanaal is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/communicatiekanaal\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met valide communicatiekanaal geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010h) Zaak bijwerken met valide communicatiekanaal is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/communicatiekanaal\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met valide communicatiekanaal geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010i) Zaak deels bijwerken met valide communicatiekanaal is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide communicatiekanaal geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"if(pm.globals.get(\"created_zaak_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011a) Zaak aanmaken met ongeldige url in relevanteAndereZaken is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/communicatiekanaal\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-011",
									"item": [
										{
											"name": "(zrc-011a) Zaak aanmaken met ongeldige url in relevanteAndereZaken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    // \"url\": pm.environment.get(\"mock_url\") + \"/404\",",
															"    \"url\": \"https://zaken-api.test.vng.cloud/api/v1/zaken/c9ac80e5-f4f6-46f9-9e64-a164c03b5f25\",",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met ongeldige url in relevanteAndereZaken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0.url\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011b) Zaak bijwerken met ongeldige url in relevanteAndereZaken is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011b) Zaak bijwerken met ongeldige url in relevanteAndereZaken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"url\": pm.environment.get(\"mock_url\") + \"/404\",",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met ongeldige url in relevanteAndereZaken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0.url\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011c) Zaak deels bijwerken met ongeldige url in relevanteAndereZaken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met ongeldige url in relevanteAndereZaken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0.url\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"relevanteAndereZaken\": [{\n\t    \"url\": \"{{mock_url}}/404\",\n\t    \"aardRelatie\": \"vervolg\"\n\t}]\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011d) Zaak aanmaken met relevanteAndereZaken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"url\": pm.globals.get(\"zaak_url\"),",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met geldige relevanteAndereZaken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011e) Zaak bijwerken met relevanteAndereZaken is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011e) Zaak bijwerken met relevanteAndereZaken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"url\": pm.globals.get(\"zaak_url\"),",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011f) Zaak deels bijwerken met relevanteAndereZaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"if(pm.globals.get(\"created_zaak_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-012a) Zaak aanmaken met opschorting zonder indicatie en reden is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"relevanteAndereZaken\": [{\n\t    \"url\": \"{{zaak_url}}\",\n\t    \"aardRelatie\": \"vervolg\"\n\t}]\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-012",
									"item": [
										{
											"name": "(zrc-012a) Zaak aanmaken met opschorting zonder indicatie en reden is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met opschorting zonder indicatie en reden geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-012b) Zaak bijwerken met opschorting zonder indicatie en reden is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012b) Zaak bijwerken met opschorting zonder indicatie en reden is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012c) Zaak deels bijwerken met opschorting zonder indicatie en reden is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"opschorting\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012d) Zaak aanmaken met verlenging zonder reden en duur is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met verlenging zonder reden en duur geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-012e) Zaak bijwerken met verlenging zonder reden en duur is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012e) Zaak bijwerken met verlenging zonder reden en duur is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012f) Zaak deels bijwerken met verlenging zonder reden en duur is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verlenging\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012g) Zaak aanmaken met opschorting null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met opschorting null geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012h) Zaak bijwerken met opschorting null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met opschorting null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012i) Zaak deels bijwerken met opschorting null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met opschorting null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-012j) Zaak aanmaken met verlenging null is mogelijk\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"opschorting\": null\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012j) Zaak aanmaken met verlenging null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met verlenging null geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012k) Zaak bijwerken met verlenging null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met verlenging null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012l) Zaak deels bijwerken met verlenging null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met verlenging null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-013a) Valideren hoofdzaak op de Zaak-resource\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verlenging\": null\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-013",
									"item": [
										{
											"name": "(zrc-013a) Valideren hoofdzaak op de Zaak-resource",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met hoofdzaak url die niet wijst naar Zaak-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"no_match\");",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create Deelzaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Deelzaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"body.zaaktype = pm.globals.get(\"deelzaaktype_url\");",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-013c) Valideren deelzaak mag geen deelzaak van zichzelf zijn",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"   ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-013d) Valideren deelzaak mag geen deelzaak van zichzelf zijn",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"   ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"hoofdzaak\": \"{{zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-014",
									"item": [
										{
											"name": "(zrc-014a) Zaak aanmaken met betalingsindicatie nvt en een waarde voor laatste betaaldatum is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met betalingsindicatie nvt en laatsteBetaaldatum niet null geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"laatsteBetaaldatum\");",
															"    pm.expect(error.code).to.be.equal(\"betaling-nvt\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-014b) Zaak bijwerken met betalingsindicatie nvt en een waarde voor laatste betaaldatum is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.betalingsindicatie = \"nvt\";",
															"body.laatsteBetaaldatum = \"2019-03-29T12:00:00\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014b) Zaak bijwerken met betalingsindicatie nvt en een waarde voor laatste betaaldatum is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met betalingsindicatie nvt en laatsteBetaaldatum niet null geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"laatsteBetaaldatum\");",
															"    pm.expect(error.code).to.be.equal(\"betaling-nvt\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.betalingsindicatie = \"nvt\";",
															"body.laatsteBetaaldatum = \"2019-03-29T12:00:00\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014c) Zaak deels bijwerken met betalingsindicatie nvt en een waarde voor laatste betaaldatum is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met betalingsindicatie nvt en laatsteBetaaldatum niet null geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"laatsteBetaaldatum\");",
															"    pm.expect(error.code).to.be.equal(\"betaling-nvt\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.betalingsindicatie = \"nvt\";",
															"body.laatsteBetaaldatum = \"2019-03-29T12:00:00\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"betalingsindicatie\": \"nvt\",\n\t\"laatsteBetaaldatum\": \"2019-03-29T12:00:00\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014d) Zaak bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
															"    var jsonBody = pm.response.json();",
															"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
															"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.betalingsindicatie = \"nvt\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014e) Zaak deels bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
															"    var jsonBody = pm.response.json();",
															"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
															"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"betalingsindicatie\": \"nvt\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-015",
									"item": [
										{
											"name": "(zrc-015a) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaak_url\")];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-015b) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015b) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaak_url\")];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015c) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaak_url\")];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"productenOfDiensten\": [\n\t\t\"{{zaak_url}}\"\t\n\t]\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015d) Zaak aanmaken met valide productenOfDiensten is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaaktype_productenOfDiensten\")[0]];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met valide productenOfDiensten geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015e) Zaak bijwerken met valide productenOfDiensten is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaaktype_productenOfDiensten\")[0]];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken met valide productenOfDiensten geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015f) Zaak deels bijwerken met valide productenOfDiensten is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"request_body\", JSON.stringify({",
															"    \"productenOfDiensten\": [",
															"        pm.globals.get(\"zaaktype_productenOfDiensten\")[0]",
															"    ]",
															"}));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide productenOfDiensten geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype for statustype validation\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-016",
									"item": [
										{
											"name": "Create Zaaktype for statustype validation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"TEMP\"",
															"body.besluittypen = [];",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Statustype for validation test",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_statustype\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"Begin\",\n\t\"zaaktype\": \"{{temp_zaaktype_url}}\",\n\t\"volgnummer\": 1\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/statustypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"statustypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype for statustype validation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}/publish",
													"host": [
														"{{temp_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak for Statustype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016a) Status toevoegen aan Zaak met statustype niet in Zaaktype.statustypen is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status toevoegen aan Zaak met Status.statustype niet in Zaak.zaaktype.statustypen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"zaaktype-mismatch\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{temp_statustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Statustype for statustype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_statustype\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_statustype}}",
													"host": [
														"{{temp_statustype}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for statustype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_zaaktype_url\");",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype for informatieobjecttype validation\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}",
													"host": [
														"{{temp_zaaktype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-017",
									"item": [
										{
											"name": "Create Zaaktype for informatieobjecttype validation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"TEMP\"",
															"body.besluittypen = [];",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InformatieObjecttype for informatieobjecttype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_iot_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"TEMP\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\",\n    \"informatieobjectcategorie\":\"X\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Create Zaaktype-InformatieObjectType relation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{temp_zaaktype_url}}\",\n\t\"informatieobjecttype\": \"{{temp_iot_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktype-informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish temp Informatieobjecttype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_iot_url}}/publish",
													"host": [
														"{{temp_iot_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype for informatieobjecttype validation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}/publish",
													"host": [
														"{{temp_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak for informatieobjecttype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject for informatieobjecttype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{temp_iot_url}}\",\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017a) ZaakInformatieObject aanmaken met informatieobjecttype niet in Zaaktype.informatieobjecttypen is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject toevoegen aan Zaak met ZaakInformatieObject.informatieobject.informatieobjecttypen niet in Zaak.zaaktype.informatieobjecttypen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"missing-zaaktype-informatieobjecttype-relation\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"informatieobject\": \"{{created_informatieobject_url}}\",\n\t\"titel\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Informatieobjecttype for informatieobjecttype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_iot_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_iot_url}}",
													"host": [
														"{{temp_iot_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for informatieobjecttype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_zaaktype_url\");",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype for eigenschap validation\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}",
													"host": [
														"{{temp_zaaktype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-018",
									"item": [
										{
											"name": "Create Zaaktype for eigenschap validation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"TEMP\"",
															"body.besluittypen = [];",
															"",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Eigenschap",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_eigenschap\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"naam\": \"TEMP\",\n\t\"definitie\": \"for test\",\n\t\"zaaktype\": \"{{temp_zaaktype_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/eigenschappen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"eigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype for eigenschap validation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}/publish",
													"host": [
														"{{temp_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak for eigenschap validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-018a) ZaakEigenschap toevoegen aan Zaak met eigenschap die niet hoort bij Zaak.zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"(zrc-018a) ZaakEigenschap toevoegen aan Zaak met eigenschap die niet hoort bij Zaak.zaaktype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"zaaktype-mismatch\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{temp_eigenschap}}\",\n\t\"waarde\": \"ja\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}/zaakeigenschappen",
													"host": [
														"{{created_zaak_url}}"
													],
													"path": [
														"zaakeigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Eigenschap",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_eigenschap\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_eigenschap}}",
													"host": [
														"{{temp_eigenschap}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for eigenschap validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_zaaktype_url\");",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype for roltype validation\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}",
													"host": [
														"{{temp_zaaktype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-019",
									"item": [
										{
											"name": "Create Zaaktype for roltype validation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"TEMP\"",
															"body.besluittypen = [];",
															"",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Roltype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_roltype\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"TEMP\",\n\t\"omschrijvingGeneriek\": \"adviseur\",\n\t\"zaaktype\": \"{{temp_zaaktype_url}}\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/roltypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"roltypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype for roltype validation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}/publish",
													"host": [
														"{{temp_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak for roltype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-019a) Rol toevoegen aan Zaak met roltype die niet hoort bij Zaak.zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"(zrc-018a) Rol toevoegen aan Zaak met roltype die niet hoort bij Zaak.zaaktype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"zaaktype-mismatch\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkeneType\": \"natuurlijk_persoon\",\n\t\"roltype\": \"{{temp_roltype}}\",\n\t\"roltoelichting\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/rollen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"rollen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Roltype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_roltype\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_roltype}}",
													"host": [
														"{{temp_roltype}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for roltype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_zaaktype_url\");",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype for resultaattype validation\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}",
													"host": [
														"{{temp_zaaktype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-020",
									"item": [
										{
											"name": "Create Zaaktype for resultaattype validation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"TEMP\"",
															"body.besluittypen = [];",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_zaaktype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Resultaattype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_resultaattype\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{temp_zaaktype_url}}\",\n\t\"omschrijving\": \"Klaar\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype for resultaattype validation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}/publish",
													"host": [
														"{{temp_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak for resultaattype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-020a) Resultaat toevoegen aan Zaak met resultaattype die niet hoort bij Zaak.zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"(zrc-020a) Resultaat toevoegen aan Zaak met resultaattype die niet hoort bij Zaak.zaaktype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"zaaktype-mismatch\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{temp_resultaattype}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Resultaattype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_resultaattype\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_resultaattype}}",
													"host": [
														"{{temp_resultaattype}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for resultaattype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_zaaktype_url\");",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype procestermijn nihil\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_zaaktype_url}}",
													"host": [
														"{{temp_zaaktype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zrc-021",
									"item": [
										{
											"name": "zrc-021a",
											"item": [
												{
													"name": "Create Zaaktype procestermijn nihil",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_nihil_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [];",
																	"body.omschrijving = \"Zaaktype for archiving tests nihil\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_nihil_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"pm.globals.set(\"random_identificatie_021\", myUUID);",
																	"body.identificatie = myUUID;",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype procestermijn nihil",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_nihil_url}}\",\n\t\"omschrijving\": \"Klaar\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn nihil",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_nihil_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn nihil",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_nihil_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_nihil_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_nihil_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															},
															{
																"key": "Content-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(zrc-021a) Afleidingswijze afgehandeld",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var moment = require('moment');",
																	"",
																	"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
																	"});",
																	"",
																	"pm.test(\"Resultaat met afleidingswijze afgehandeld toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
																	"        const brondatum = moment.utc(jsonData.einddatum);",
																	"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
																	"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
																	"        ",
																	"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
																	"    }",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype nihil",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_nihil_url}}",
															"host": [
																"{{zaaktype_procestermijn_nihil_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "zrc-021b",
											"item": [
												{
													"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [];",
																	"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie = myUUID",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"hoofdzaaktype_url\", res.url);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"pm.globals.set(\"random_identificatie-21zrc\", myUUID);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"identificatie\": \"{{random_identificatie-21zrc}}\",\n    \"omschrijving\": \"zrc_tests_1 hoofdzaak\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": true,\n    \"publicatieIndicatie\": false,\n    \"verantwoordelijke\":\"X\",\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_procestermijn_nihil_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"deelzaaktypen\": [\n        \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\"\n    ],\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n        \"http://localhost:8002/api/v1/statustypen/ecb7fc03-5c11-46be-917f-e70e16c77554\",\n        \"http://localhost:8002/api/v1/statustypen/14734ec8-04f8-4c18-a009-e190ff448ca9\"\n    ],\n    \"resultaattypen\": [\n        \"http://localhost:8002/api/v1/resultaattypen/eead9dcd-9544-4862-8a03-b55643f95228\"\n    ],\n    \"eigenschappen\": [\n        \"http://localhost:8002/api/v1/eigenschappen/d417bd46-a2a8-46d7-bb8c-4c8dc214301b\"\n    ],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true,\n    \"verlengingstermijn\": \"P5D\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype afleidingswijze hoofdzaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype afleidingswijze afgehandeld for hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"resultaattype_for_hoofdzaaktype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{hoofdzaaktype_url}}\",\n\t\"omschrijving\": \"Klaar\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype for hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"eindstatustype_for_hoofdzaaktype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{hoofdzaaktype_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archiving_zaaktypen\", [",
																	"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{hoofdzaaktype_url}}/publish",
															"host": [
																"{{hoofdzaaktype_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Hoofdzaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"hoofdzaak_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"body.zaaktype = pm.globals.get(\"hoofdzaaktype_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Hoofdzaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.globals.set(\"resultaattype\", pm.globals.get(\"resultaattype_for_hoofdzaaktype_url\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"hoofdzaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Hoofdzaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"statustype\": \"{{eindstatustype_for_hoofdzaaktype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-18T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Retrieve Hoofdzaak einddatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"hoofdzaak_einddatum\", pm.response.json().einddatum);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{hoofdzaak_url}}",
															"host": [
																"{{hoofdzaak_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Hoofdzaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{hoofdzaak_url}}",
															"host": [
																"{{hoofdzaak_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaattype for hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{resultaattype_for_hoofdzaaktype_url}}",
															"host": [
																"{{resultaattype_for_hoofdzaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Eindstatustype for hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{eindstatustype_for_hoofdzaaktype_url}}",
															"host": [
																"{{eindstatustype_for_hoofdzaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Hoofdzaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{hoofdzaaktype_url}}",
															"host": [
																"{{hoofdzaaktype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021c",
											"item": [
												{
													"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [];",
																	"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie = myUUID;",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype afleidingswijze eigenschap",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"archivering_test\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Eigenschap for zaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archivering_eigenschap_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"naam\": \"archivering_test\",\n\t\"definitie\": \"test\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/eigenschappen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"eigenschappen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archiving_zaaktypen\", [",
																	"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eigenschap to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"eigenschap_waarde\", pm.response.json().waarde);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"eigenschap\": \"{{archivering_eigenschap_url}}\",\n\t\"waarde\": \"2023-01-01\"\n}"
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}/zaakeigenschappen",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															],
															"path": [
																"zaakeigenschappen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(zrc-021c) Afleidingswijze eigenschap",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var moment = require('moment');",
																	"",
																	"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
																	"});",
																	"",
																	"pm.test(\"Resultaat met afleidingswijze eigenschap toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
																	"        const brondatum = moment.utc(pm.globals.get(\"eigenschap_waarde\"));",
																	"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
																	"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
																	"        ",
																	"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
																	"    }",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021d",
											"item": [
												{
													"name": "Create concept Besluittype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"concept_besluittype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test archiving\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [pm.globals.get(\"concept_besluittype_url\")];",
																	"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie = myUUID;",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype afleidingswijze ingangsdatum_besluit",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish concept Besluittype",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{concept_besluittype_url}}/publish",
															"host": [
																"{{concept_besluittype_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archiving_zaaktypen\", [",
																	"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete concept Besluittype",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{concept_besluittype_url}}",
															"host": [
																"{{concept_besluittype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021e",
											"item": [
												{
													"name": "Create concept Besluittype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"concept_besluittype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test archiving\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [pm.globals.get(\"concept_besluittype_url\")];",
																	"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie = myUUID",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype afleidingswijze ingangsdatum_besluit",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish concept Besluittype",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{concept_besluittype_url}}/publish",
															"host": [
																"{{concept_besluittype_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archiving_zaaktypen\", [",
																	"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Besluit to Zaak with minimal vervaldatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"besluit_min_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"{{zaak_bronorganisatie}}\",\n\t\"besluittype\": \"{{concept_besluittype_url}}\",\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2016-01-01\",\n\t\"vervaldatum\": \"2022-01-01\"\n}"
														},
														"url": {
															"raw": "{{brc_url}}/besluiten",
															"host": [
																"{{brc_url}}"
															],
															"path": [
																"besluiten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Besluit to Zaak with maximal vervaldatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"besluit_max_url\", pm.response.json().url);",
																	"    pm.globals.set(\"max_vervaldatum\", pm.response.json().vervaldatum);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"{{zaak_bronorganisatie}}\",\n\t\"besluittype\": \"{{concept_besluittype_url}}\",\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2024-01-01\",\n\t\"vervaldatum\": \"2025-01-01\"\n}"
														},
														"url": {
															"raw": "{{brc_url}}/besluiten",
															"host": [
																"{{brc_url}}"
															],
															"path": [
																"besluiten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete concept Besluittype",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{concept_besluittype_url}}",
															"host": [
																"{{concept_besluittype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021f",
											"item": [
												{
													"name": "Create Zaaktype procestermijn ingeschatte_bestaansduur_procesobject",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [];",
																	"body.omschrijving = \"Zaaktype for archiving tests ingeschatte_bestaansduur_procesobject\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie=myUUID",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn ingeschatte_bestaansduur_procesobject",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype ingeschatte_bestaansduur_object nihil",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_ingeschatte_bestaansduur_object_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_ingeschatte_bestaansduur_object_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype ingeschatte_bestaansduur_procesobject",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_ingeschatte_bestaansduur_object_url}}",
															"host": [
																"{{zaaktype_procestermijn_ingeschatte_bestaansduur_object_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021g",
											"item": [
												{
													"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [];",
																	"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie=myUUID",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"Test\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archiving_zaaktypen\", [",
																	"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(zrc-021g) Afleidingswijze ander_datumkenmerk",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var moment = require('moment');",
																	"",
																	"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
																	"});",
																	"",
																	"pm.test(\"Resultaat met afleidingswijze ander_datumkenmerk toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
																	"        // const brondatum = moment.utc(jsonData.einddatum).add(procestermijn);",
																	"        // TODO",
																	"        const brondatum = null;",
																	"        ",
																	"        // const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
																	"        // var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
																	"        ",
																	"        // pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
																	"        pm.expect(jsonData.archiefactiedatum).to.be.equal(null);",
																	"    }",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype procestermijn vast_te_leggen_datum Copy",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"Test\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021h",
											"item": [
												{
													"name": "external objects",
													"item": [
														{
															"name": "Create concept Besluittype",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"concept_besluittype_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test archiving\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
																},
																"url": {
																	"raw": "{{ztc_url}}/besluittypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"besluittypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var res = pm.response.json();",
																			"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"// Retrieve the Zaak body template and modify as needed",
																			"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																			"body.besluittypen = [pm.globals.get(\"concept_besluittype_url\")];",
																			"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																			"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																			"var uuid = require('uuid');",
																			"var myUUID = uuid.v4(); ",
																			"body.identificatie=myUUID",
																			"// Store the modified Zaak body, allowing it to be used in the main request",
																			"pm.globals.set(\"request_body\", JSON.stringify(body));"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{{request_body}}"
																},
																"url": {
																	"raw": "{{ztc_url}}/zaaktypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"zaaktypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Resultaattype afleidingswijze zaakobject",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var jsonData = pm.response.json();",
																			"",
																			"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																			"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																			"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																			"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"datum\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"besluit\",\n\t\t\"registratie\": \"\"\n\t}\n}"
																},
																"url": {
																	"raw": "{{ztc_url}}/resultaattypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"resultaattypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
																},
																"url": {
																	"raw": "{{ztc_url}}/statustypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"statustypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Publish concept Besluittype",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{concept_besluittype_url}}/publish",
																	"host": [
																		"{{concept_besluittype_url}}"
																	],
																	"path": [
																		"publish"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"archiving_zaaktypen\", [",
																			"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																			"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																			"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																			"]);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
																	"host": [
																		"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
																	],
																	"path": [
																		"publish"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaak without archiefnominatie",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"// Retrieve the Zaak body template and modify as needed",
																			"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																			"delete body.archiefnominatie;",
																			"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																			"",
																			"// Store the modified Zaak body, allowing it to be used in the main request",
																			"pm.globals.set(\"request_body\", JSON.stringify(body));"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept-Crs",
																		"value": "EPSG:4326",
																		"type": "text"
																	},
																	{
																		"key": "Content-Crs",
																		"value": "EPSG:4326",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{{request_body}}"
																},
																"url": {
																	"raw": "{{zrc_url}}/zaken",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"zaken"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Besluit with minimal datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"if(pm.response.code == 201) {",
																			"    pm.globals.set(\"besluit_min_url\", pm.response.json().url);",
																			"}"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"{{zaak_bronorganisatie}}\",\n\t\"besluittype\": \"{{concept_besluittype_url}}\",\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"datum\": \"2010-01-01\",\n\t\"ingangsdatum\": \"2016-01-01\",\n\t\"vervaldatum\": \"2022-01-01\"\n}"
																},
																"url": {
																	"raw": "{{brc_url}}/besluiten",
																	"host": [
																		"{{brc_url}}"
																	],
																	"path": [
																		"besluiten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaakobject with minimal datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaakobject_min_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"objectType\": \"besluit\",\n\t\"object\": \"{{besluit_min_url}}\"\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/zaakobjecten",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"zaakobjecten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Besluit with maximal datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"if(pm.response.code == 201) {",
																			"    pm.globals.set(\"besluit_max_url\", pm.response.json().url);",
																			"    pm.globals.set(\"max_datum\", pm.response.json().datum);",
																			"}"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"{{zaak_bronorganisatie}}\",\n\t\"besluittype\": \"{{concept_besluittype_url}}\",\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"datum\": \"2013-01-01\",\n\t\"ingangsdatum\": \"2016-01-01\",\n\t\"vervaldatum\": \"2022-01-01\"\n}"
																},
																"url": {
																	"raw": "{{brc_url}}/besluiten",
																	"host": [
																		"{{brc_url}}"
																	],
																	"path": [
																		"besluiten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaakobject with maximal datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaakobject_max_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"objectType\": \"besluit\",\n\t\"object\": \"{{besluit_max_url}}\"\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/zaakobjecten",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"zaakobjecten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add Resultaat to Zaak",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"// if (!pm.globals.get(\"resultaattype_index\")) {",
																			"//     pm.globals.set(\"resultaattype_index\", 0);",
																			"// }",
																			"",
																			"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/resultaten",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"resultaten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add Eindstatus to Zaak without archiefnominatie",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/statussen",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"statussen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete Resultaat from Zaak",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "DELETE",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaak_resultaat_url}}",
																	"host": [
																		"{{zaak_resultaat_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete Zaak without archiefnominatie",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept-Crs",
																		"value": "EPSG:4326",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaak_zonder_archiefnominatie_url}}",
																	"host": [
																		"{{zaak_zonder_archiefnominatie_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete Zaaktype vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "DELETE",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
																	"host": [
																		"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete concept Besluittype",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{concept_besluittype_url}}",
																	"host": [
																		"{{concept_besluittype_url}}"
																	]
																}
															},
															"response": []
														}
													],
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"type": "text/javascript",
																"exec": [
																	""
																]
															}
														},
														{
															"listen": "test",
															"script": {
																"type": "text/javascript",
																"exec": [
																	""
																]
															}
														}
													]
												},
												{
													"name": "local objects",
													"item": [
														{
															"name": "Create concept Besluittype",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"concept_besluittype_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test archiving\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
																},
																"url": {
																	"raw": "{{ztc_url}}/besluittypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"besluittypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaaktype procestermijn vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var res = pm.response.json();",
																			"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"// Retrieve the Zaak body template and modify as needed",
																			"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																			"body.besluittypen = [pm.globals.get(\"concept_besluittype_url\")];",
																			"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																			"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																			"var uuid = require('uuid');",
																			"var myUUID = uuid.v4(); ",
																			"body.identificatie=myUUID",
																			"// Store the modified Zaak body, allowing it to be used in the main request",
																			"pm.globals.set(\"request_body\", JSON.stringify(body));"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{{request_body}}"
																},
																"url": {
																	"raw": "{{ztc_url}}/zaaktypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"zaaktypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Resultaattype afleidingswijze zaakobject",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var jsonData = pm.response.json();",
																			"",
																			"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																			"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																			"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																			"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"waardepeildatum\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"woz_waarde\",\n\t\t\"registratie\": \"\"\n\t}\n}"
																},
																"url": {
																	"raw": "{{ztc_url}}/resultaattypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"resultaattypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
																},
																"url": {
																	"raw": "{{ztc_url}}/statustypen",
																	"host": [
																		"{{ztc_url}}"
																	],
																	"path": [
																		"statustypen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Publish concept Besluittype",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{concept_besluittype_url}}/publish",
																	"host": [
																		"{{concept_besluittype_url}}"
																	],
																	"path": [
																		"publish"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"archiving_zaaktypen\", [",
																			"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																			"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																			"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																			"]);"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
																	"host": [
																		"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
																	],
																	"path": [
																		"publish"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaak without archiefnominatie",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"// Retrieve the Zaak body template and modify as needed",
																			"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																			"delete body.archiefnominatie;",
																			"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																			"",
																			"// Store the modified Zaak body, allowing it to be used in the main request",
																			"pm.globals.set(\"request_body\", JSON.stringify(body));"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept-Crs",
																		"value": "EPSG:4326",
																		"type": "text"
																	},
																	{
																		"key": "Content-Crs",
																		"value": "EPSG:4326",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{{request_body}}"
																},
																"url": {
																	"raw": "{{zrc_url}}/zaken",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"zaken"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaakobject with minimal datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaakobject_min_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"objectType\": \"woz_waarde\",\n\t\"objectIdentificatie\": {\n\t\t\"waardepeildatum\": \"2008-1-1\",\n\t\t\"isVoor\": {\n\t\t\t\"wozObjectNummer\": \"testobject\",\n\t\t\t\"aanduidingWozObject\": {\n\t\t\t\t\"aoaIdentificatie\": \"bla\",\n\t\t\t\t\"wplWoonplaatsNaam\": \"bla\",\n\t\t\t\t\"gorOpenbareRuimteNaam\": \"bla\",\n\t\t\t\t\"aoaHuisnummer\": 10\n\t\t\t}\n\t\t}\n\t}\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/zaakobjecten",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"zaakobjecten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Create Zaakobject with maximal datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaakobject_max_url\", pm.response.json().url);",
																			"pm.globals.set(\"max_waardepeildatum\", pm.response.json().objectIdentificatie.waardepeildatum);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"objectType\": \"woz_waarde\",\n\t\"objectIdentificatie\": {\n\t\t\"waardepeildatum\": \"2013-1-1\",\n\t\t\"isVoor\": {\n\t\t\t\"wozObjectNummer\": \"testobject\",\n\t\t\t\"aanduidingWozObject\": {\n\t\t\t\t\"aoaIdentificatie\": \"bla\",\n\t\t\t\t\"wplWoonplaatsNaam\": \"bla\",\n\t\t\t\t\"gorOpenbareRuimteNaam\": \"bla\",\n\t\t\t\t\"aoaHuisnummer\": 10\n\t\t\t}\n\t\t}\n\t}\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/zaakobjecten",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"zaakobjecten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add Resultaat to Zaak",
															"event": [
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			"// if (!pm.globals.get(\"resultaattype_index\")) {",
																			"//     pm.globals.set(\"resultaattype_index\", 0);",
																			"// }",
																			"",
																			"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/resultaten",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"resultaten"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Add Eindstatus to Zaak without archiefnominatie",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
																},
																"url": {
																	"raw": "{{zrc_url}}/statussen",
																	"host": [
																		"{{zrc_url}}"
																	],
																	"path": [
																		"statussen"
																	]
																}
															},
															"response": []
														},
														{
															"name": "(zrc-021h) Afleidingswijze zaakobject local",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			"var moment = require('moment');",
																			"",
																			"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
																			"    pm.response.to.have.status(200);",
																			"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
																			"});",
																			"",
																			"pm.test(\"Resultaat met afleidingswijze zaakobject toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
																			"    var jsonData = pm.response.json();",
																			"    ",
																			"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
																			"        const brondatum = moment.utc(pm.globals.get(\"max_waardepeildatum\"));",
																			"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
																			"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
																			"        ",
																			"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
																			"    }",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept-Crs",
																		"type": "text",
																		"value": "EPSG:4326"
																	}
																],
																"url": {
																	"raw": "{{zaak_zonder_archiefnominatie_url}}",
																	"host": [
																		"{{zaak_zonder_archiefnominatie_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete Resultaat from Zaak",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "DELETE",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaak_resultaat_url}}",
																	"host": [
																		"{{zaak_resultaat_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete Zaak without archiefnominatie",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept-Crs",
																		"value": "EPSG:4326",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaak_zonder_archiefnominatie_url}}",
																	"host": [
																		"{{zaak_zonder_archiefnominatie_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete Zaaktype vast_te_leggen_datum",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"exec": [
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "DELETE",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
																	"host": [
																		"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
																	]
																}
															},
															"response": []
														},
														{
															"name": "Delete concept Besluittype",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{concept_besluittype_url}}",
																	"host": [
																		"{{concept_besluittype_url}}"
																	]
																}
															},
															"response": []
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zrc-021i",
											"item": [
												{
													"name": "Create Zaaktype procestermijn vast_te_leggen_datum for gerelateerde_zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var res = pm.response.json();",
																	"pm.globals.set(\"zaaktype_procestermijn_vast_te_leggen_datum_url\", res.url);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.besluittypen = [];",
																	"body.omschrijving = \"Zaaktype for archiving tests vast_te_leggen_datum\";",
																	"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_vast_te_leggen_datum_url\");",
																	"var uuid = require('uuid');",
																	"var myUUID = uuid.v4(); ",
																	"body.identificatie=myUUID",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype afleidingswijze zaakobject",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"current_resultaattype\", jsonData.url);",
																	"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = pm.response.json();",
																	"",
																	"pm.globals.set(\"relevante_zaak_resultaattype\", jsonData.url);",
																	"// pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
																	"// pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
																	"// pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"omschrijving\": \"Test\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create eind Statustype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"current_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"Eind\",\n\t\"zaaktype\": \"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Publish Zaaktype procestermijn vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"archiving_zaaktypen\", [",
																	"    pm.globals.get(\"zaaktype_procestermijn_nihil_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_ingeschatte_bestaansduur_object_url\"),",
																	"    pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\")",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}/publish",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															],
															"path": [
																"publish"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create relevante Zaak with minimal einddatum",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"relevante_zaak_min_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{relevante_zaak_min_url}}\",\n\t\"resultaattype\": \"{{relevante_zaak_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to relevante Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{relevante_zaak_min_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Retrieve min einddatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{relevante_zaak_min_url}}",
															"host": [
																"{{relevante_zaak_min_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create relevante Zaak with maximal einddatum",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.einddatum = \"2012-01-01\";",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"relevante_zaak_max_url\", pm.response.json().url);",
																	"pm.globals.set(\"max_einddatum\", pm.response.json().einddatum);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															},
															{
																"key": "Content-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{relevante_zaak_max_url}}\",\n\t\"resultaattype\": \"{{relevante_zaak_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to relevante Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{relevante_zaak_max_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Retrieve max einddatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"max_einddatum\", pm.response.json().einddatum);"
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															},
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{relevante_zaak_max_url}}",
															"host": [
																"{{relevante_zaak_max_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaak without archiefnominatie",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
																	"delete body.archiefnominatie;",
																	"body.relevanteAndereZaken = [",
																	"    {\"url\": pm.globals.get(\"relevante_zaak_min_url\"), \"aardRelatie\": \"bijdrage\"},",
																	"    {\"url\": pm.globals.get(\"relevante_zaak_max_url\"), \"aardRelatie\": \"vervolg\"}",
																	"];",
																	"body.zaaktype = pm.globals.get(\"zaaktype_procestermijn_vast_te_leggen_datum_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															},
															{
																"key": "Content-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{zrc_url}}/zaken",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"zaken"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Resultaat to Zaak",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// if (!pm.globals.get(\"resultaattype_index\")) {",
																	"//     pm.globals.set(\"resultaattype_index\", 0);",
																	"// }",
																	"",
																	"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaattype\": \"{{current_resultaattype}}\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/resultaten",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"resultaten"
															]
														}
													},
													"response": []
												},
												{
													"name": "Add Eindstatus to Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statustype\": \"{{current_statustype_url}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
														},
														"url": {
															"raw": "{{zrc_url}}/statussen",
															"host": [
																"{{zrc_url}}"
															],
															"path": [
																"statussen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Resultaat from Zaak",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_resultaat_url}}",
															"host": [
																"{{zaak_resultaat_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete relevante Zaak min einddatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{relevante_zaak_min_url}}",
															"host": [
																"{{relevante_zaak_min_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete relevante Zaak max einddatum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"type": "text",
																"value": "EPSG:4326"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{relevante_zaak_max_url}}",
															"host": [
																"{{relevante_zaak_max_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaak without archiefnominatie",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept-Crs",
																"value": "EPSG:4326",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaak_zonder_archiefnominatie_url}}",
															"host": [
																"{{zaak_zonder_archiefnominatie_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete Zaaktype vast_te_leggen_datum",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{zaaktype_procestermijn_vast_te_leggen_datum_url}}",
															"host": [
																"{{zaaktype_procestermijn_vast_te_leggen_datum_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "zrc-022",
									"item": [
										{
											"name": "(zrc-022a) Zaak aanmaken geeft voor archiefstatus standaardwaarde nog_te_archiveren",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken geeft voor archiefstatus standaardwaarde nog_te_archiveren\", function(){",
															"    pm.expect(pm.response.json().archiefstatus).to.be.equal(\"nog_te_archiveren\");",
															"});",
															"",
															"// If the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak to be archived\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak to be archived",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-022b) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd\"]);",
															"    postman.setNextRequest(\"(COMMON) (ZRC) Create ZaakInformatieObject\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change Informatieobject status to gearchiveerd",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"status\": \"gearchiveerd\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-022d) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefnominatie niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefnominatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefnominatie\");",
															"    pm.expect(error.code).to.be.equal(\"archiefnominatie-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-022e) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefnominatie niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefnominatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefnominatie\");",
															"    pm.expect(error.code).to.be.equal(\"archiefnominatie-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-022f) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefactiedatum niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefactiedatum geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefactiedatum\");",
															"    pm.expect(error.code).to.be.equal(\"archiefactiedatum-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"body.archiefnominatie = \"blijvend_bewaren\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-022g) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefactiedatum niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak deels bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefactiedatum geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefactiedatum\");",
															"    pm.expect(error.code).to.be.equal(\"archiefactiedatum-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\",\n\t\"archiefnominatie\": \"blijvend_bewaren\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-022h) Zaak bijwerken archiefstatus niet nog_te_archiveren is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"body.archiefnominatie = \"blijvend_bewaren\";",
															"body.archiefactiedatum = \"2020-01-01\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren met archiefactiedatum en archiefnominatie gezet geef 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefstatus).to.be.equal(pm.globals.get(\"current_archiefstatus\"));",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Change Informatieobject status to not gearchiveerd\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change Informatieobject status to not gearchiveerd",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var index = pm.globals.get(\"archiefstatus_index\");",
															"",
															"if (index == pm.globals.get(\"archiefstatussen\").length - 1) {",
															"    postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak to delete\"]);",
															"} else {",
															"    // Loop",
															"    pm.globals.set(\"archiefstatus_index\", index + 1);",
															"    ",
															"    postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak to be archived\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"status\": \"\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "zrc-023",
									"item": [
										{
											"name": "Create Zaak to delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Deelzaak to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"created_zaak_url\");",
															"body.zaaktype = pm.globals.get(\"deelzaaktype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"deelzaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaattype\": \"{{resultaattype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Status to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"status_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statustype\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Rol to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"rol_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkene\": \"http://example.com/2d0815580af94ee0a15aa677aa646e1a\",\n\t\"betrokkeneType\": \"natuurlijk_persoon\",\n\t\"rolomschrijving\": \"behandelaar\",\n\t\"roltoelichting\": \"testrol\",\n\t\"roltype\": \"{{roltype_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/rollen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"rollen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaakobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaakobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"objectType\": \"pand\",\n\t\"objectIdentificatie\": {\n\t\t\"identificatie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Zaakeigenschap to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"zaakeigenschap_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{zaaktype_eigenschap}}\",\n\t\"waarde\": \"test\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}/zaakeigenschappen",
													"host": [
														"{{created_zaak_url}}"
													],
													"path": [
														"zaakeigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Zaak and Informatieobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n\t\"titel\": \"\",\n\t\"beschrijving\": \"\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve ObjectInformatieObject url",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"objectinformatieobject_url\", pm.response.json()[0].url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{created_zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{created_zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Klantcontact to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"klantcontact_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"datumtijd\": \"2019-02-20T00:00:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/klantcontacten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"klantcontacten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023a) Zaak verwijderen is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak verwijderen geeft 204\", function() {",
															"   pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023b) Zaak verdwijnt uit zrc na verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak ophalen uit zrc na verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});",
															"",
															"pm.globals.unset(\"created_zaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023c) Resultaat verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaat ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{resultaat_url}}",
													"host": [
														"{{resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023d) Status verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{status_url}}",
													"host": [
														"{{status_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023e) Rol verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Rol ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{rol_url}}",
													"host": [
														"{{rol_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023f) Zaakobject verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaakobject ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{zaakobject_url}}",
													"host": [
														"{{zaakobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023g) Zaakeigenschap verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaakeigenschap ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{zaakeigenschap_url}}",
													"host": [
														"{{zaakeigenschap_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023h) ObjectInformatieObject verdwijnt uit drc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject ophalen uit drc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{objectinformatieobject_url}}",
													"host": [
														"{{objectinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023i) ZaakInformatieObject verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ZaakInformatieObject ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-023j) Klantcontact verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Klantcontact ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{klantcontact_url}}",
													"host": [
														"{{klantcontact_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "(ZRC) Delete Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete EnkelvoudigInformatieObject indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobject_gebruiksrecht_null_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_gebruiksrecht_null_url}}",
													"host": [
														"{{informatieobject_gebruiksrecht_null_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete Resultaattype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"resultaattype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{resultaattype_url}}",
													"host": [
														"{{resultaattype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete Deelzaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"deelzaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{deelzaaktype_url}}",
													"host": [
														"{{deelzaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_url}}",
													"host": [
														"{{zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluittype_url}}",
													"host": [
														"{{besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZRC) Delete Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"// Continue to the drc tests",
															"postman.setNextRequest(\"(DRC) Retrieve existing Catalogus\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Delete Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) (ZRC) Create ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n    \"titel\": \"\",\n    \"beschrijving\": \"\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaakinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Lock EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobject_lock_id\", pm.response.json().lock);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}/lock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Unlock EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}/unlock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Deelzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"deelzaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{deelzaak_url}}",
													"host": [
														"{{deelzaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									]
								}
							],
							"description": "Bevat alle business logic tests voor het Zaakregistratiecomponent (ZRC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "drc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Generate JWT for collection Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"  const extractedValue = pm.response.json().authorization",
															"  var bearer_and_token = extractedValue.split(' ');",
															"  var jwt_token = bearer_and_token[1]",
															"pm.globals.set(\"jwt_token\",jwt_token)",
															"pm.globals.set(\"jwt_token_without_claims\",jwt_token)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientIds\": [\n    \"allthescopesarebelongtous222223132532\"\n  ],\n  \"secret\": \"sosecret\",\n  \"label\": \"user\",\n  \"heeftAlleAutorisaties\": true,\n  \"autorisaties\": []\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(DRC) Retrieve existing Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");",
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"if(pm.response.json().count) {",
															"    var catalogus = pm.response.json().results[0];",
															"    pm.globals.set(\"catalogus_url\", pm.response.json().results[0].url);",
															"    postman.setNextRequest(\"(DRC) Get Selectielijstklassen and Procestypen\");",
															"    ",
															"    if(catalogus.besluittypen) {",
															"        for(i=0; i<catalogus.besluittypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.besluittypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"besluittype_url\", catalogus.besluittypen[0]);",
															"    }",
															"    if(catalogus.informatieobjecttypen) {",
															"        for(i=0; i<catalogus.informatieobjecttypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.informatieobjecttypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"    if(catalogus.zaaktypen) {",
															"        for(i=0; i<catalogus.zaaktypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.zaaktypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.unset(\"selectielijst_page\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ztc_url}}/catalogussen?domein=ZGWT",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													],
													"query": [
														{
															"key": "domein",
															"value": "ZGWT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"catalogus_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"domein\": \"ZGWT\",\n\t\"rsin\": \"000000000\",\n\t\"contactpersoonBeheerNaam\": \"Test Persoon\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(DRC) Get Selectielijstklassen and Procestypen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.globals.get(\"selectielijst_page\") == 1) {",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_nihil_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\");",
															"}",
															"",
															"if(pm.response.code == 200) {",
															"    var results = pm.response.json().results;",
															"    for(i=0; i<results.length; i++) {",
															"        if(results[i].procestermijn == \"nihil\" && !pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_nihil_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_nihil_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"ingeschatte_bestaansduur_procesobject\" && !pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"vast_te_leggen_datum\" && !pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\", results[i].url);",
															"            pm.globals.set(\"selectielijstklasse_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_vast_te_leggen_datum_url\", results[i].procesType);",
															"            pm.globals.set(\"procestype_url\", results[i].procesType);",
															"        }",
															"    }",
															"}",
															"",
															"if(!(",
															"        pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")",
															"    ) && pm.response.json().next",
															") {",
															"    pm.globals.set(\"selectielijst_page\", pm.globals.get(\"selectielijst_page\") + 1)",
															"    postman.setNextRequest(\"(DRC) Get Selectielijstklassen and Procestypen\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(!pm.globals.get(\"selectielijst_page\")) pm.globals.set(\"selectielijst_page\", 1)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaten?page={{selectielijst_page}}",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaten"
													],
													"query": [
														{
															"key": "page",
															"value": "{{selectielijst_page}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InformatieObjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"informatieobject\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\",\n    \"informatieobjectcategorie\": \"X\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [\"{{informatieobjecttype_url}}\"],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var res = pm.response.json();",
															"pm.globals.set(\"zaaktype_url\", res.url);",
															"pm.globals.set(\"zaaktype_vertrouwelijkheid\", res.vertrouwelijkheidaanduiding);",
															"pm.globals.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
															"pm.globals.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
															"pm.globals.set(\"zaaktype_eigenschap\", res.eigenschappen[0]);",
															"pm.globals.set(\"zaaktype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"1\",\n    \"omschrijving\": \"drc_tests_1\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": false,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n        \"http://localhost:8002/api/v1/statustypen/ecb7fc03-5c11-46be-917f-e70e16c77554\",\n        \"http://localhost:8002/api/v1/statustypen/14734ec8-04f8-4c18-a009-e190ff448ca9\"\n    ],\n    \"resultaattypen\": [\n        \"http://localhost:8002/api/v1/resultaattypen/eead9dcd-9544-4862-8a03-b55643f95228\"\n    ],\n    \"eigenschappen\": [\n        \"http://localhost:8002/api/v1/eigenschappen/d417bd46-a2a8-46d7-bb8c-4c8dc214301b\"\n    ],\n    \"informatieobjecttypen\": [],\n    \"verantwoordelijke\":\"X\",\n    \"besluittypen\": [\n        \"{{besluittype_url}}\"\n    ],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype-InformatieObjectType relation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"informatieobjecttype\": \"informatieobject\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktype-informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{besluittype_url}}/publish",
													"host": [
														"{{besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Informatieobjecttype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{informatieobjecttype_url}}/publish",
													"host": [
														"{{informatieobjecttype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{zaaktype_url}}/publish",
													"host": [
														"{{zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var zaak = pm.response.json();",
															"pm.globals.set(\"zaak_url\", zaak.url);",
															"pm.globals.set(\"zaak_id\", zaak.identificatie);",
															"pm.globals.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
															"pm.globals.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
															"pm.globals.set(\"zaak_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-20\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"{{selectielijstklasse_url}}\",\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												},
												"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
											},
											"response": []
										},
										{
											"name": "Create Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluit_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"000000000\",\n\t\"besluittype\": \"{{besluittype_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2019-04-26\",\n\t\"vervaldatum\": \"2019-04-28\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "drc-001",
									"item": [
										{
											"name": "(drc-001a) EnkelvoudigInformatieObject aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.globals.set(\"informatieobject_url\", pm.response.json().url);",
															"pm.globals.set(\"informatieobject_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"));",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Informatieobjecttype for EIO updates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_iotype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"TEMP\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\",\n    \"informatieobjectcategorie\":\"X\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001d) EnkelvoudigInformatieObject aanmaken met concept informatieobjecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met concept informatieobjecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"not-published\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Publish temp Informatieobjecttype\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.informatieobjecttype = pm.globals.get(\"temp_iotype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish temp Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"postman.setNextRequest(\"(COMMON) Lock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-001e) EnkelvoudigInformatieObject informatieobjecttype bijwerken is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_iotype_url}}/publish",
													"host": [
														"{{temp_iotype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001e) EnkelvoudigInformatieObject informatieobjecttype bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject informatieobjecttype bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(200);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.informatieobjecttype = \"{{temp_iotype_url}}\";",
															"body.lock = pm.globals.get(\"informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001f) EnkelvoudigInformatieObject informatieobjecttype bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject informatieobjecttype deels bijwerken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    ",
															"    // var error = pm.response.json()[\"invalidParams\"][0];",
															"    // pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    // pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});",
															"",
															"// If the type was modified, change it back",
															"if(pm.response.code == 200) {",
															"    pm.sendRequest({",
															"        \"url\": pm.globals.get(\"informatieobject_url\"), ",
															"        \"method\": \"PATCH\",",
															"        \"header\": {",
															"            \"Accept\": \"application/json\",",
															"            \"Content-Type\": \"application/json\",",
															"            \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"        },",
															"        \"body\": {",
															"            mode: \"raw\",",
															"            raw: JSON.stringify({\"informatieobjecttype\": pm.globals.get(\"informatieobjecttype_url\"), \"lock\": pm.globals.get(\"informatieobject_lock_id\")})",
															"        }",
															"        }, function (err, response) {",
															"            console.log(response.json());",
															"    });",
															"}",
															"",
															"postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete temp Informatieobjecttype\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"aangepaste_auteur\", \"aangepaste auteur\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobjecttype\": \"{{temp_iotype_url}}\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete temp Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_iotype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_iotype_url}}",
													"host": [
														"{{temp_iotype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "drc-002",
									"item": [
										{
											"name": "(drc-002a) ObjectInformatieObject aanmaken met objectType zaak en ongeldige object url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype zaak en object url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-002b) ObjectInformatieObject aanmaken met objectType besluit en ongeldige object url is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/404\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002b) ObjectInformatieObject aanmaken met objectType besluit en ongeldige object url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype besluit en object url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-002c) ObjectInformatieObject aanmaken met objectType zaak en object url die niet wijst naar Zaak is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/404\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002c) ObjectInformatieObject aanmaken met objectType zaak en object url die niet wijst naar Zaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype zaak en object url die niet wijst naar Zaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-002d) ObjectInformatieObject aanmaken met objectType besluit en object url die niet wijst naar Besluit is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/200\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002d) ObjectInformatieObject aanmaken met objectType besluit en object url die niet wijst naar Besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype besluit en object url die niet wijst naar Besluit geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create relation between Zaak and Informatieobject\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/200\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "drc-003",
									"item": [
										{
											"name": "Create relation between Zaak and Informatieobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-003a) ObjectInformatieObject aanmaken met bestaande combinatie object en informatieobject en objectType zaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype zaak en bestaande combinatie object en informatieobject geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unique\");",
															"});",
															"",
															"var request_names = [\"Create relation between Besluit and Informatieobject\"];",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    request_names.unshift(\"(COMMON) Delete ZaakInformatieObject\");",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"} else {",
															"    postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"}",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-003b) ObjectInformatieObject aanmaken met bestaande combinatie object en informatieobject en objectType besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype besluit en bestaande combinatie object en informatieobject geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unique\");",
															"});",
															"",
															"var request_names = [\"(drc-004a) ObjectInformatieObject aanmaken met zaak en informatieobject niet gekoppeld in zrc is onmogelijk\"];",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    request_names.unshift(\"(COMMON) Delete BesluitInformatieObject\");",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"} else {",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"}",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "drc-004",
									"item": [
										{
											"name": "(drc-004a) ObjectInformatieObject aanmaken met zaak en informatieobject niet gekoppeld in zrc is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objectType zaak en object en informatieobject die nog niet gekoppeld zijn in zrc geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"inconsistent-relation\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-004b) ObjectInformatieObject aanmaken met besluit en informatieobject niet gekoppeld in brc is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-004b) ObjectInformatieObject aanmaken met besluit en informatieobject niet gekoppeld in brc is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objectType besluit en object en informatieobject die nog niet gekoppeld zijn in zrc geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"inconsistent-relation\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-005a) EnkelvoudigInformatieobject aanmaken met ontvangstdatum en status in bewerking is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "drc-005",
									"item": [
										{
											"name": "(drc-005a) EnkelvoudigInformatieobject aanmaken met ontvangstdatum en status in bewerking is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in_bewerking\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieobject aanmaken met een waarde voor ontvangstdatum en status in bewerking geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"status\");",
															"    pm.expect(error.code).to.be.equal(\"invalid_for_received\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create EnkelvoudigInformatieObject with status in bewerking\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject with status in bewerking",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in_bewerking\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"",
															"postman.setNextRequest(\"(COMMON) Lock created EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-005b) EnkelvoudigInformatieObject bijwerken ontvangstdatum zetten als status in bewerking is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005b) EnkelvoudigInformatieObject bijwerken ontvangstdatum zetten als status in bewerking is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in_bewerking\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"body.lock = pm.globals.get(\"created_informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status in bewerking geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"status\");",
															"    pm.expect(error.code).to.be.equal(\"invalid_for_received\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005c) EnkelvoudigInformatieObject deels bijwerken ontvangstdatum zetten als status in bewerking is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status in bewerking geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"status\");",
															"    pm.expect(error.code).to.be.equal(\"invalid_for_received\");",
															"});",
															"",
															"if(pm.globals.get(\"created_informatieobject_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-005d) EnkelvoudigInformatieobject aanmaken met ontvangstdatum en status ter vaststelling is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"status\": \"in_bewerking\",\n\t\"ontvangstdatum\": \"2019-01-01\",\n\t\"lock\": \"{{created_informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005d) EnkelvoudigInformatieobject aanmaken met ontvangstdatum en status ter vaststelling is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"ter_vaststelling\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieobject aanmaken met een waarde voor ontvangstdatum en status ter vaststelling geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"status\");",
															"    pm.expect(error.code).to.be.equal(\"invalid_for_received\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create EnkelvoudigInformatieObject with status ter vaststelling\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject with status ter vaststelling",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in_bewerking\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"",
															"postman.setNextRequest(\"(COMMON) Lock created EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-005e) EnkelvoudigInformatieObject bijwerken ontvangstdatum zetten als status ter vaststelling is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005e) EnkelvoudigInformatieObject bijwerken ontvangstdatum zetten als status ter vaststelling is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"ter_vaststelling\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"body.lock = pm.globals.get(\"created_informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status ter vaststelling geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"status\");",
															"    pm.expect(error.code).to.be.equal(\"invalid_for_received\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005f) EnkelvoudigInformatieObject deels bijwerken ontvangstdatum zetten als status ter vaststelling is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status ter vaststelling geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"status\");",
															"    pm.expect(error.code).to.be.equal(\"invalid_for_received\");",
															"});",
															"",
															"if(pm.globals.get(\"created_informatieobject_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"status\": \"ter_vaststelling\",\n\t\"ontvangstdatum\": \"2019-01-01\",\n\t\"lock\": \"{{created_informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "drc-006",
									"item": [
										{
											"name": "(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken zet indicatie gebruiksrecht op null indien niet gedefinieerd\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(null);",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-006b) EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true vereist Gebruiksrechten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{informatieobject_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006b) EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true vereist Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true zonder Gebruiksrechten in drc geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"indicatieGebruiksrecht\");",
															"    pm.expect(error.code).to.be.equal(\"missing-gebruiksrechten\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Gebruiksrechten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.indicatieGebruiksrecht = true;",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"gebruiksrechten_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006c) Aanmaken Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op true",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Aanmaken Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op true\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(true); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Gebruiksrechten",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{gebruiksrechten_url}}",
													"host": [
														"{{gebruiksrechten_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006d) Verwijderen Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Verwijderen Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op null\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(null); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "drc-007",
									"item": [
										{
											"name": "(drc-007a) EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheidaanduiding\", \"vertrouwelijk\");",
															"",
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [",
															"        \"(COMMON) Lock EnkelvoudigInformatieObject\",",
															"        \"(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding\"",
															"    ]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"} else {",
															"    postman.setNextRequest(\"(COMMON) Lock EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding\"]);   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheidaanduiding\", \"vertrouwelijk\");",
															"",
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\");",
															"body.lock = pm.globals.get(\"informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-007c) EnkelvoudigInformatieObject deels bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheidaanduiding\", \"zeer_geheim\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Informatieobjecttype vertrouwelijkheidaanduiding\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheidaanduiding}}\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Informatieobjecttype vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobjecttype_vertrouwelijkheidaanduiding\", pm.response.json().vertrouwelijkheidaanduiding);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-007b) EnkelvoudigInformatieObject aanmaken leidt vertrouwelijkheidaanduiding af uit Informatieobjecttype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"delete body.vertrouwelijkheidaanduiding;",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken zonder expliciet gedefinieerde vertrouwelijkheidaanduiding leidt vertrouwelijkheidaanduiding af uit Informatieobjecttype\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"informatieobjecttype_vertrouwelijkheidaanduiding\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [",
															"        \"(COMMON) Create EnkelvoudigInformatieObject\",",
															"        \"(COMMON) Create ZaakInformatieObject\",",
															"        \"(drc-008a) EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan\"",
															"    ]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"} else {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [",
															"        \"(COMMON) Create ZaakInformatieObject\",",
															"        \"(drc-008a) EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan\"",
															"    ]);",
															"    postman.setNextRequest(\"(COMMON) Create EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "drc-008",
									"item": [
										{
											"name": "(drc-008a) EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"pending-relations\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"var next_requests = [];",
															"if(pm.response.code != 204) {",
															"    next_requests.push(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"} ",
															"",
															"next_requests.push(\"(COMMON) Create EnkelvoudigInformatieObject\");",
															"next_requests.push(\"(COMMON) Create Gebruiksrechten\");",
															"next_requests.push(\"Delete created InformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", next_requests);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete created InformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-008b) EnkelvoudigInformatieObject verwijderen cascade door naar gerelateerde Gebruiksrechten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.variables.set(\"encoded_url\", encodeURIComponent(pm.globals.get(\"created_informatieobject_url\")))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject verwijderen verwijdert ook alle gerelateerde Gebruiksrechten uit het DRC\", function() {",
															"    var res = pm.response.json();",
															"    pm.expect(Array.isArray(res));",
															"    pm.expect(res.length).to.be.equal(0);",
															"});",
															"",
															"if(pm.response.code != 400) {",
															"    postman.setNextRequest(\"(COMMON) Delete Gebruiksrechten\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-008c) EnkelvoudigInformatieObject verwijderen cascade door naar gerelateerde audit trail\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten?informatieobject={{encoded_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													],
													"query": [
														{
															"key": "informatieobject",
															"value": "{{encoded_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-008c) EnkelvoudigInformatieObject verwijderen cascade door naar gerelateerde audit trail",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject verwijderen verwijdert ook de gerelateerde audit trail uit het DRC\", function() {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.globals.unset(\"created_informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{created_informatieobject_url}}/audittrail",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"audittrail"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names != []) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									]
								},
								{
									"name": "drc-009",
									"item": [
										{
											"name": "Create applicatie for lock tests",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"applicatie_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clientIds\": [\n        \"{{client_id_limited}}\"\n    ],\n    \"label\": \"Demo User for document lock tests\",\n    \"heeftAlleAutorisaties\": false,\n    \"autorisaties\": [\n        {\n            \"component\": \"drc\",\n            \"componentWeergave\": \"Documentregistratiecomponent\",\n            \"scopes\": [\n            \t\"documenten.lezen\",\n                \"documenten.bijwerken\",\n                \"documenten.lock\"\n            ],\n            \"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n            \"maxVertrouwelijkheidaanduiding\": \"geheim\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieobject for lock tests",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{informatieobject_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009a) EnkelvoudigInformatieObject bijwerken terwijl unlocked niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"body.lock = \"some_incorrect_lock\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unlocked\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009b) EnkelvoudigInformatieObject deels bijwerken terwijl unlocked niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unlocked\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009c) EnkelvoudigInformatieObject locken geeft een lockId terug",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject locken geeft een lockId terug\", function() {",
															"    pm.response.to.have.status(200);",
															"    ",
															"    var lock = pm.response.json().lock;",
															"    ",
															"    // Check if returned lock is valid hexadecimal",
															"    var regex = /[0-9A-Fa-f]{6}/g;",
															"    pm.expect(regex.test(lock)).to.be.true;",
															"    pm.globals.set(\"informatieobject_lock_id\", lock);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}/lock",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009d) EnkelvoudigInformatieObject bijwerken zonder lock niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"lock\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009e) EnkelvoudigInformatieObject deels bijwerken zonder lock niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"missing-lock-id\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"titel\": \"aangepaste_titel\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009f) EnkelvoudigInformatieObject bijwerken is mogelijk na lock",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"EnkelvoudigInformatieObject bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().titel).to.be.equal(pm.globals.get(\"aangepaste_titel\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"body.lock = pm.globals.get(\"informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009g) EnkelvoudigInformatieObject deels bijwerken is mogelijk na lock",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().auteur).to.be.equal(pm.globals.get(\"aangepaste_auteur\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"aangepaste_auteur\", \"aangepaste auteur\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009h) EnkelvoudigInformatieObject bijwerken met verkeerd lockId niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met verkeerd lockId geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"incorrect-lock-id\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"body.lock = \"some_incorrect_lock_id\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009i) EnkelvoudigInformatieObject deels bijwerken met verkeerd lockId niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met verkeerd lockId geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"incorrect-lock-id\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\",\n\t\"lock\": \"some_incorrect_lock_id\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009j) EnkelvoudigInformatieObject geforceerd unlocken zonder applicatie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject geforceerd unlocken zonder applicatie met juiste scope geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}/unlock",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete lock Applicatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"applicatie_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{applicatie_url}}",
													"host": [
														"{{applicatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009k) EnkelvoudigInformatieObject geforceerd unlocken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject geforceerd unlocken geeft 204\", function() {",
															"    pm.response.to.have.status(204);",
															"});",
															"",
															"if(pm.globals.get(\"created_informatieobject_url\")) {",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(DRC) Delete EnkelvoudigInformatieObject\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}/unlock",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "(DRC) Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluit_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(DRC) Delete Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_url}}",
													"host": [
														"{{zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(DRC) Delete Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluittype_url}}",
													"host": [
														"{{besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(DRC) Delete Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"// Continue to the brc tests",
															"postman.setNextRequest(\"(BRC) Retrieve existing Catalogus\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Create EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{informatieobject_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Create ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{created_informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Create Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_gebruiksrechten_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{created_informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete ObjectInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_objectinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_objectinformatieobject_url}}",
													"host": [
														"{{created_objectinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaakinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluitinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_gebruiksrechten_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_gebruiksrechten_url}}",
													"host": [
														"{{created_gebruiksrechten_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Lock EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobject_lock_id\", pm.response.json().lock);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}/lock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Lock created EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_lock_id\", pm.response.json().lock);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}/lock",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Unlock EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}/unlock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									]
								}
							],
							"description": "Bevat alle business logic tests voor het Documentregistratiecomponent (DRC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "brc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Generate JWT for collection Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"  const extractedValue = pm.response.json().authorization",
															"  var bearer_and_token = extractedValue.split(' ');",
															"  var jwt_token = bearer_and_token[1]",
															"pm.globals.set(\"jwt_token\",jwt_token)",
															"pm.globals.set(\"jwt_token_without_claims\",jwt_token)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientIds\": [\n    \"allthescopesarebelongtous222223132532\"\n  ],\n  \"secret\": \"sosecret\",\n  \"label\": \"user\",\n  \"heeftAlleAutorisaties\": true,\n  \"autorisaties\": []\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(BRC) Retrieve existing Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");",
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"if(pm.response.json().count) {",
															"    var catalogus = pm.response.json().results[0];",
															"    pm.globals.set(\"catalogus_url\", pm.response.json().results[0].url);",
															"    postman.setNextRequest(\"(BRC) Get Selectielijstklassen and Procestypen\");",
															"    ",
															"    if(catalogus.besluittypen) {",
															"        for(i=0; i<catalogus.besluittypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.besluittypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"besluittype_url\", catalogus.besluittypen[0]);",
															"    }",
															"    if(catalogus.informatieobjecttypen) {",
															"        for(i=0; i<catalogus.informatieobjecttypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.informatieobjecttypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"    if(catalogus.zaaktypen) {",
															"        for(i=0; i<catalogus.zaaktypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.zaaktypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.unset(\"selectielijst_page\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ztc_url}}/catalogussen?domein=ZGWT",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													],
													"query": [
														{
															"key": "domein",
															"value": "ZGWT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"catalogus_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"domein\": \"ZGWT\",\n\t\"rsin\": \"000000000\",\n\t\"contactpersoonBeheerNaam\": \"Test Persoon\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(BRC) Get Selectielijstklassen and Procestypen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.globals.get(\"selectielijst_page\") == 1) {",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_nihil_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\");",
															"}",
															"",
															"if(pm.response.code == 200) {",
															"    var results = pm.response.json().results;",
															"    for(i=0; i<results.length; i++) {",
															"        if(results[i].procestermijn == \"nihil\" && !pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_nihil_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_nihil_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"ingeschatte_bestaansduur_procesobject\" && !pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"vast_te_leggen_datum\" && !pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\", results[i].url);",
															"            pm.globals.set(\"selectielijstklasse_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_vast_te_leggen_datum_url\", results[i].procesType);",
															"            pm.globals.set(\"procestype_url\", results[i].procesType);",
															"        }",
															"    }",
															"}",
															"",
															"if(!(",
															"        pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")",
															"    ) && pm.response.json().next",
															") {",
															"    pm.globals.set(\"selectielijst_page\", pm.globals.get(\"selectielijst_page\") + 1)",
															"    postman.setNextRequest(\"(BRC) Get Selectielijstklassen and Procestypen\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(!pm.globals.get(\"selectielijst_page\")) pm.globals.set(\"selectielijst_page\", 1)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaten?page={{selectielijst_page}}",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaten"
													],
													"query": [
														{
															"key": "page",
															"value": "{{selectielijst_page}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InformatieObjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"informatieobject\",\n    \"informatieobjectcategorie\":\"X\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [\"{{informatieobjecttype_url}}\"],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var res = pm.response.json();",
															"pm.globals.set(\"zaaktype_url\", res.url);",
															"pm.globals.set(\"zaaktype_vertrouwelijkheid\", res.vertrouwelijkheidaanduiding);",
															"pm.globals.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
															"pm.globals.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
															"pm.globals.set(\"zaaktype_eigenschap\", res.eigenschappen[0]);",
															"pm.globals.set(\"zaaktype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_identificatie-brc-01\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{random_identificatie-brc-01}}\",\n    \"omschrijving\": \"brc_tests_1\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"verantwoordelijke\":\"X\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": false,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [\n        \"http://localhost:8002/api/v1/statustypen/ecb7fc03-5c11-46be-917f-e70e16c77554\",\n        \"http://localhost:8002/api/v1/statustypen/14734ec8-04f8-4c18-a009-e190ff448ca9\"\n    ],\n    \"resultaattypen\": [\n        \"http://localhost:8002/api/v1/resultaattypen/eead9dcd-9544-4862-8a03-b55643f95228\"\n    ],\n    \"eigenschappen\": [\n        \"http://localhost:8002/api/v1/eigenschappen/d417bd46-a2a8-46d7-bb8c-4c8dc214301b\"\n    ],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [\n        \"{{besluittype_url}}\"\n    ],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2019-01-01\",\n    \"versiedatum\": \"2019-01-01\",\n    \"concept\": true\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{besluittype_url}}/publish",
													"host": [
														"{{besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Informatieobjecttype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{informatieobjecttype_url}}/publish",
													"host": [
														"{{informatieobjecttype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Zaaktype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{zaaktype_url}}/publish",
													"host": [
														"{{zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "(BRC) Create EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Gebruiksrechten to EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject with indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobject_gebruiksrecht_null_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n\t\"indicatieGebruiksrecht\": null,\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "brc-001",
									"item": [
										{
											"name": "(brc-001a) Besluit aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"var besluit = pm.response.json();",
															"pm.globals.set(\"besluit_url\", besluit.url);",
															"pm.globals.set(\"besluit_id\", besluit.identificatie);",
															"pm.globals.set(\"besluit_verantwoordelijke_organisatie\", besluit.verantwoordelijkeOrganisatie);",
															"pm.globals.set(\"besluit_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"besluittype\": \"{{besluittype_url}}\",\n    \"datum\": \"2019-01-01\",\n    \"ingangsdatum\": \"2018-01-01\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001b) Besluit bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"pm.globals.set(\"toelichting\", \"aangepaste toelichting\");",
															"body.toelichting = pm.globals.get(\"toelichting\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Besluit bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.globals.get(\"toelichting\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001c) Besluit deels bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"bestuursorgaan\", \"aangepast bestuursorgaan\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit deels bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Besluit deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().bestuursorgaan).to.be.equal(pm.globals.get(\"bestuursorgaan\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bestuursorgaan\": \"{{bestuursorgaan}}\"\n}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001d) Besluit aanmaken met ongeldige besluittype url is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit aanmaken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"// If the test failed and the Besluit was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-001e) Besluit aanmaken met besluittype url die niet wijst naar Besluittype is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001e) Besluit aanmaken met besluittype url die niet wijst naar Besluittype is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit aanmaken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"// If the test failed and the Besluit was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Besluittype for Besluit updates\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype for Besluit updates",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"TEMP\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001f) Besluit aanmaken met concept besluittype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit aanmaken met concept besluittype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"not-published\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Publish temp Besluittype\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.globals.get(\"temp_besluittype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish temp Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_besluittype_url}}/publish",
													"host": [
														"{{temp_besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001g) Besluit besluittype bijwerken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.globals.get(\"temp_besluittype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit besluittype bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001h) Besluit besluittype deels bijwerken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit besluittype deels bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});",
															"",
															"// If the type was modified, change it back",
															"if(pm.response.code == 200) {",
															"    pm.sendRequest({",
															"        \"url\": pm.globals.get(\"besluit_url\"), ",
															"        \"method\": \"PATCH\",",
															"        \"header\": {",
															"            \"Accept\": \"application/json\",",
															"            \"Content-Type\": \"application/json\",",
															"            \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"        },",
															"        \"body\": {",
															"            mode: \"raw\",",
															"            raw: JSON.stringify({\"besluittype\": pm.globals.get(\"besluittype_url\")})",
															"        }",
															"        }, function (err, response) {",
															"            console.log(response.json());",
															"    });",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluittype\": \"{{temp_besluittype_url}}\"\n}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete temp Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"temp_besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_besluittype_url}}",
													"host": [
														"{{temp_besluittype_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "brc-002",
									"item": [
										{
											"name": "(brc-002a) Uniciteit verantwoordelijke_organisatie en identificatie op de Besluit-resource (POST)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.identificatie = pm.globals.get(\"besluit_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit aanmaken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
															"});",
															"",
															"// If the test failed and the Besluit was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Besluit with unique identificatie and verantwoordelijke_organisatie\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluit with unique identificatie and verantwoordelijke_organisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluit_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												},
												"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
											},
											"response": []
										},
										{
											"name": "(brc-002b) Besluit bijwerken identificatie aanpassen niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.identificatie = \"nieuwe identificatie\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit bijwerken identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-002c) Besluit deels bijwerken identificatie aanpassen niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit deels bijwerken identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{besluit_id}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-002d) Besluit bijwerken verantwoordelijke_organisatie aanpassen niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.verantwoordelijkeOrganisatie = \"245122461\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit bijwerken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"verantwoordelijkeOrganisatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-002e) Besluit deels bijwerken verantwoordelijke_organisatie aanpassen niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit deels bijwerken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"verantwoordelijkeOrganisatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Besluiten for verantwoordelijke_organisatie\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Besluit\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"245122461\"\n}"
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Besluiten for verantwoordelijke_organisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluiten_for_verantwoordelijke_organisatie\", pm.response.json());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{brc_url}}/besluiten?verantwoordelijkeOrganisatie={{besluit_verantwoordelijke_organisatie}}",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													],
													"query": [
														{
															"key": "verantwoordelijkeOrganisatie",
															"value": "{{besluit_verantwoordelijke_organisatie}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-002f) Genereer unieke identificatie voor Besluit onder verantwoordelijke_organisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
															"    var created_besluit_id = pm.response.json().identificatie",
															"    ",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    ",
															"    pm.response.to.have.status(201);",
															"    ",
															"    // Compare the identificatie of the created Besluit with all the identificaties of other Besluiten",
															"    // with the same verantwoordelijke_organisatie",
															"    var besluiten_with_same_id = pm.globals.get(\"besluiten_for_verantwoordelijke_organisatie\").results.filter(besluit => besluit.identificatie === created_besluit_id);",
															"    ",
															"    // Verify that the identificatie for the created Besluit isn't the same as any other",
															"    pm.expect(besluiten_with_same_id.length).to.be.equal(0);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-003a) BesluitInformatieObject aanmaken is mogelijk\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Besluit\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "brc-003",
									"item": [
										{
											"name": "(brc-003a) BesluitInformatieObject aanmaken met ongeldige informatieobject url is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken met informatieobject url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that error was thrown for correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create BesluitInformatieObject\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"} else {",
															"    postman.setNextRequest(\"Create BesluitInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n    \"informatieobject\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "brc-004",
									"item": [
										{
											"name": "Create different Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"postman.setNextRequest(\"(COMMON) Create BesluitInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-004a) BesluitInformatieObject bijwerken besluit aanpassen is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004a) BesluitInformatieObject bijwerken besluit aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject bijwerken besluit aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluit\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{created_besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004b) BesluitInformatieObject deels bijwerken besluit aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject deels bijwerken besluit aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluit\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{created_besluit_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004c) BesluitInformatieObject bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004d) BesluitInformatieObject deels bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject deels bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete different Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluit_url\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create BesluitInformatieObject\"]);",
															"postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "brc-005",
									"item": [
										{
											"name": "Create BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-005a) BesluitInformatieObject aanmaken maakt ObjectInformatieObject aan met objectType besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"BesluitInformatieObject aanmaken maakt een ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(jsonData.length).to.be.equal(1);",
															"});",
															"",
															"pm.test(\"BesluitInformatieObject aanmaken maakt een ObjectInformatieObject met objectType besluit\", function() {",
															"    pm.expect(jsonData[0].objectType).to.be.equal(\"besluit\");",
															"});",
															"",
															"pm.test(\"BesluitInformatieObject aanmaken maakt een ObjectInformatieObject met correcte besluit en informatieobject\", function() {",
															"    pm.expect(jsonData[0].object).to.be.equal(pm.globals.get(\"besluit_url\"));",
															"    pm.expect(jsonData[0].informatieobject).to.be.equal(pm.globals.get(\"informatieobject_url\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{besluit_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{besluit_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete BesluitInformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-005b) BesluitInformatieObject verwijderen verwijdert ObjectInformatieObject uit DRC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject verwijderen verwijdert ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().length).to.be.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{besluit_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{besluit_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "brc-006",
									"item": [
										{
											"name": "Create Zaak for besluittype validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.globals.get(\"zaaktype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"TEMP\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_besluittype_url}}/publish",
													"host": [
														"{{temp_besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-006a) Besluit aanmaken bij Zaak met besluittype niet in Zaak.zaaktype.besluittypen is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.zaak = pm.globals.get(\"created_zaak_url\");",
															"body.besluittype = pm.globals.get(\"temp_besluittype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit aanmaken bij Zaak met besluittype niet in Zaak.zaaktype.besluittypen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"zaaktype-mismatch\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluittype",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_besluittype_url}}",
													"host": [
														"{{temp_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "brc-007",
									"item": [
										{
											"name": "Create InformatieObjecttype for BIO validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_iot_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"TEMP\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"temp_besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"TEMP\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish temp Informatieobjecttype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_iot_url}}/publish",
													"host": [
														"{{temp_iot_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Publish Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{temp_besluittype_url}}/publish",
													"host": [
														"{{temp_besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluit for BIO validation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.globals.get(\"temp_besluittype_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluit_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject for BIO validation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{temp_iot_url}}\",\n\t\"bestandsomvang\": 6\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-007a) BesluitInformatieObject aanmaken bij Besluit met informatieobjecttype niet in Besluit.besluittype.informatieobjecttypen is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken bij Besluit met informatieobjecttype niet in Besluit.besluittype.informatieobjecttypen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"missing-besluittype-informatieobjecttype-relation\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{created_besluit_url}}\",\n\t\"informatieobject\": \"{{created_informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluittype",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_besluittype_url}}",
													"host": [
														"{{temp_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Informatieobjecttype",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{temp_iot_url}}",
													"host": [
														"{{temp_iot_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Besluit to be deleted\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "brc-008",
									"item": [
										{
											"name": "Create Besluit to be deleted",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"",
															"postman.setNextRequest(\"(COMMON) Create BesluitInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete created Besluit\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete created Besluit",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-008a) Besluit verwijderen cascade door naar gerelateerde BesluitInformatieObjecten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.variables.set(\"encoded_url\", encodeURIComponent(pm.globals.get(\"created_besluit_url\")))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit verwijderen verwijdert ook alle gerelateerde BesluitInformatieObjecten uit het BRC\", function() {",
															"    var res = pm.response.json();",
															"    pm.expect(Array.isArray(res));",
															"    pm.expect(res.length).to.be.equal(0);",
															"});",
															"",
															"if(pm.response.code != 400) {",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-008b) Besluit verwijderen cascade door naar gerelateerde audit trail\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten?besluit={{encoded_url}}",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													],
													"query": [
														{
															"key": "besluit",
															"value": "{{encoded_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-008b) Besluit verwijderen cascade door naar gerelateerde audit trail",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluit verwijderen verwijdert ook de gerelateerde audit trail uit het BRC\", function() {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.globals.unset(\"created_besluit_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{created_besluit_url}}/audittrail",
													"host": [
														"{{created_besluit_url}}"
													],
													"path": [
														"audittrail"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "Delete Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluit_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobject_gebruiksrecht_null_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_gebruiksrecht_null_url}}",
													"host": [
														"{{informatieobject_gebruiksrecht_null_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(BRC) Delete Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_url}}",
													"host": [
														"{{zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(BRC) Delete Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluittype_url}}",
													"host": [
														"{{besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(BRC) Delete Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"// Continue to the ztc tests",
															"postman.setNextRequest(\"(ZTC) Retrieve existing Catalogus\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Create BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluit_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluitinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									]
								}
							],
							"description": "Bevat alle business logic tests voor het Besluitregistratiecomponent (BRC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ztc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Generate JWT for collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"  const extractedValue = pm.response.json().authorization",
															"  var bearer_and_token = extractedValue.split(' ');",
															"  var jwt_token = bearer_and_token[1]",
															"pm.globals.set(\"jwt_token\",jwt_token)",
															"pm.globals.set(\"jwt_token_without_claims\",jwt_token)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientIds\": [\n    \"allthescopesarebelongtous222223132532\"\n  ],\n  \"secret\": \"sosecret\",\n  \"label\": \"user\",\n  \"heeftAlleAutorisaties\": true,\n  \"autorisaties\": []\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{token-issuer_url}}",
													"host": [
														"{{token-issuer_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZTC) Retrieve existing Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");",
															"pm.globals.unset(\"informatieobjecttype_url\");",
															"",
															"if(pm.response.json().count) {",
															"    var catalogus = pm.response.json().results[0];",
															"    pm.globals.set(\"catalogus_url\", pm.response.json().results[0].url);",
															"    postman.setNextRequest(\"(ZTC) Get Selectielijstklassen and Procestypen\");",
															"    ",
															"    if(catalogus.besluittypen) {",
															"        for(i=0; i<catalogus.besluittypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.besluittypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"besluittype_url\", catalogus.besluittypen[0]);",
															"    }",
															"    if(catalogus.informatieobjecttypen) {",
															"        for(i=0; i<catalogus.informatieobjecttypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.informatieobjecttypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"    if(catalogus.zaaktypen) {",
															"        for(i=0; i<catalogus.zaaktypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.zaaktypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.globals.unset(\"selectielijst_page\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ztc_url}}/catalogussen?domein=ZGWT",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													],
													"query": [
														{
															"key": "domein",
															"value": "ZGWT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"catalogus_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"domein\": \"ZGWT\",\n\t\"rsin\": \"000000000\",\n\t\"contactpersoonBeheerNaam\": \"Test Persoon\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZTC) Get Selectielijstklassen and Procestypen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.globals.get(\"selectielijst_page\") == 1) {",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_nihil_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\");",
															"    pm.globals.unset(\"selectielijstklasse_procestermijn_leeg_url\");",
															"}",
															"",
															"if(pm.response.code == 200) {",
															"    var results = pm.response.json().results;",
															"    for(i=0; i<results.length; i++) {",
															"        if(results[i].procestermijn == \"nihil\" && !pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_nihil_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_nihil_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"ingeschatte_bestaansduur_procesobject\" && !pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"vast_te_leggen_datum\" && !pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\", results[i].url);",
															"            pm.globals.set(\"selectielijstklasse_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_vast_te_leggen_datum_url\", results[i].procesType);",
															"            pm.globals.set(\"procestype_url\", results[i].procesType);",
															"        } if(results[i].procestermijn == \"\" && !pm.globals.get(\"selectielijstklasse_procestermijn_leeg_url\")) {",
															"            pm.globals.set(\"selectielijstklasse_procestermijn_leeg_url\", results[i].url);",
															"            pm.globals.set(\"procestype_procestermijn_leeg_url\", results[i].procesType);",
															"        }",
															"    }",
															"}",
															"",
															"if(!(",
															"        pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\") ",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_vast_te_leggen_datum_url\")",
															"        && pm.globals.get(\"selectielijstklasse_procestermijn_leeg_url\")",
															"    ) && pm.response.json().next",
															") {",
															"    pm.globals.set(\"selectielijst_page\", pm.globals.get(\"selectielijst_page\") + 1)",
															"    postman.setNextRequest(\"(ZTC) Get Selectielijstklassen and Procestypen\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if(!pm.globals.get(\"selectielijst_page\")) pm.globals.set(\"selectielijst_page\", 1)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaten?page={{selectielijst_page}}",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaten"
													],
													"query": [
														{
															"key": "page",
															"value": "{{selectielijst_page}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Resultaattypeomschrijving",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaattypeomschrijving_url\", pm.response.json()[0].url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{referentielijst_url}}/resultaattypeomschrijvingen",
													"host": [
														"{{referentielijst_url}}"
													],
													"path": [
														"resultaattypeomschrijvingen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InformatieObjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json().url);",
															"pm.globals.set(\"informatieobjecttype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"informatieobject\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Applicatie without scope geforceerd_verwijderen",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"applicatie_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clientIds\": [\n        \"{{client_id_limited}}\"\n    ],\n    \"label\": \"Demo User for catalogi concept tests\",\n    \"heeftAlleAutorisaties\": false,\n    \"autorisaties\": [\n        {\n            \"component\": \"ztc\",\n            \"componentWeergave\": \"Zaaktypecatalogus\",\n            \"scopes\": [\n            \t\"catalogi.lezen\",\n                \"catalogi.schrijven\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{ac_url}}/applicaties",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-001",
									"item": [
										{
											"name": "(ztc-001a) Zaaktype aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"zaaktype_url\", pm.response.json().url);",
															"}",
															"",
															"pm.globals.set(\"zaaktype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"pm.globals.set(\"random_identificatie-ztc-01\", myUUID);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{random_identificatie-ztc-01}}\",\n    \"omschrijving\": \"Melding Openbare Ruimte\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"doel\": \"test doel\",\n    \"verantwoordelijke\":\"X\",\n    \"aanleiding\": \"test aanleiding\",\n    \"indicatieInternOfExtern\": \"extern\",\n    \"handelingInitiator\": \"indienen\",\n    \"onderwerp\": \"openbare ruimte\",\n    \"handelingBehandelaar\": \"behandelen\",\n    \"doorlooptijd\": \"P10D\",\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": false,\n    \"publicatieIndicatie\": false,\n    \"productenOfDiensten\": [\n        \"https://ref.tst.vng.cloud/standaard/\"\n    ],\n    \"selectielijstProcestype\": \"{{procestype_url}}\",\n    \"referentieproces\": {\n        \"naam\": \"test\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"statustypen\": [],\n    \"resultaattypen\": [],\n    \"eigenschappen\": [],\n    \"informatieobjecttypen\": [],\n    \"besluittypen\": [],\n    \"gerelateerdeZaaktypen\": [],\n    \"beginGeldigheid\": \"2005-01-01\",\n    \"eindeGeldigheid\": \"2012-01-01\",\n    \"versiedatum\": \"2012-01-01\",\n    \"concept\": true\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-001b) Zaaktype aanmaken met selectielijstProcestype url die niet wijst naar Procestype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype aanmaken met selectielijstProcestype url die niet wijst naar Procestype resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"selectielijstProcestype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-002a) Resultaattype aanmaken met valide gegevens is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.selectielijstProcestype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID;",
															"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype for afleidingswijze afgehandeld",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"zaaktype afleidingswijze afgehandeld\";",
															"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_nihil_url\");",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"zaaktype_afleidingswijze_afgehandeld_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype for afleidingswijze termijn",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"zaaktype afleidingswijze termijn\";",
															"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"zaaktype_afleidingswijze_termijn_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype for empty procestermijn",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.omschrijving = \"zaaktype geen procestermijn\";",
															"body.selectielijstProcestype = pm.globals.get(\"procestype_procestermijn_leeg_url\");",
															"var uuid = require('uuid');",
															"var myUUID = uuid.v4(); ",
															"body.identificatie = myUUID;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"zaaktype_procestermijn_leeg_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-002",
									"item": [
										{
											"name": "(ztc-002a) Resultaattype aanmaken met valide gegevens is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    pm.globals.set(\"resultaattype_omschrijving_generiek\", pm.response.json().omschrijvingGeneriek);",
															"}",
															"",
															"pm.globals.set(\"resultaattype_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{resultaattypeomschrijving_url}}\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-002b) Resultaattype.omschrijvingGeneriek wordt afgeleid uit Resultaattypeomschrijving.omschrijving",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaatype.omschrijvingGeneriek is gelijk aan Resultaattypeomschrijving.omschrijving\", function() {",
															"    pm.expect(pm.globals.get(\"resultaattype_omschrijving_generiek\")).to.be.equal(pm.response.json().omschrijving); ",
															"});",
															"",
															"if(pm.globals.get(\"created_resultaattype_url\")) {",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-002c) Resultaattype aanmaken met resultaattypeomschrijving url die niet wijst naar correcte resource is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{resultaattypeomschrijving_url}}",
													"host": [
														"{{resultaattypeomschrijving_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-002c) Resultaattype aanmaken met resultaattypeomschrijving url die niet wijst naar correcte resource is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met resultaattypeomschrijving url die niet wijst naar Resultaattypeomschrijving resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"resultaattypeomschrijving\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-002d) Resultaattype aanmaken met selectielijstklasse url die niet wijst naar correcte resource is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.resultaattypeomschrijving = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-002d) Resultaattype aanmaken met selectielijstklasse url die niet wijst naar correcte resource is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse url die niet wijst naar Resultaat resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"selectielijstklasse\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-002e) Resultaattype aanmaken met selectielijstklasse url met incorrect procestype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-002e) Resultaattype aanmaken met selectielijstklasse url met incorrect procestype is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"body.brondatumArchiefprocedure.procestermijn = \"P5M\";",
															"body.omschrijving = \"procestype-mismatch\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse niet van hetzelfde procestype als Resultaattype.zaaktype.selectielijstProcestype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"procestype-mismatch\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Resultaat.waardering and Resultaat.bewaartermijn\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Resultaat.waardering and Resultaat.bewaartermijn",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"resultaat_waardering\", pm.response.json().waardering);",
															"pm.globals.set(\"resultaat_bewaartermijn\", pm.response.json().bewaartermijn);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{selectielijstklasse_url}}",
													"host": [
														"{{selectielijstklasse_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-002f) Resultaattype.archiefnominatie is gelijk aan Resultaat.waardering indien niet gedefinieerd",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"delete body.archiefnominatie;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype.archiefnominatie is gelijk aan Resultaat.waardering indien niet expliciet gedefinieerd\", function() {",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaat_waardering\")); ",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-002g) Resultaattype.archiefactietermijn is gelijk aan Resultaat.bewaartermijn indien niet gedefinieerd\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-002g) Resultaattype.archiefactietermijn is gelijk aan Resultaat.bewaartermijn indien niet gedefinieerd",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"delete body.archiefnominatie;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype.archiefactietermijn is gelijk aan Resultaat.bewaartermijn indien niet expliciet gedefinieerd\", function() {",
															"    pm.expect(pm.response.json().archiefactietermijn).to.be.equal(pm.globals.get(\"resultaat_bewaartermijn\")); ",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003a) Resultaattype met selectielijstklasse.procestermijn nihil en niet afleidingswijze afgehandeld is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-003",
									"item": [
										{
											"name": "(ztc-003a) Resultaattype met selectielijstklasse.procestermijn nihil en niet afleidingswijze afgehandeld is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en niet brondatumArchiefprocedure.afleidingswijze afgehandeld geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003b) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze afgehandeld is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_termijn_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003b) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze afgehandeld is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en brondatumArchiefprocedure.afleidingswijze afgehandeld geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003c) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_procesobject en niet afleidingswijze termijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_afgehandeld_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003c) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_procesobject en niet afleidingswijze termijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_procesobject en niet brondatumArchiefprocedure.afleidingswijze termijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003d) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_procesobject en afleidingswijze termijn is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_afgehandeld_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003d) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_procesobject en afleidingswijze termijn is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_procesobject en brondatumArchiefprocedure.afleidingswijze termijn geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003e) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze ander_datumkenmerk is onmogelijk\"]);",
															"}",
															"",
															"pm.globals.set(\"current_afleidingswijze_index\", 0);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_termijn_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003e) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze ander_datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze ander_datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003f) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze eigenschap is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003f) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze eigenschap is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze eigenschap geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003g) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze gerelateerde_zaak is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003g) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze gerelateerde_zaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze gerelateerde_zaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003h) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze hoofdzaak is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003h) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze hoofdzaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze hoofdzaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003i) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze ingangsdatum_besluit is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003i) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze ingangsdatum_besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze ingangsdatum_besluit geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003j) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze vervaldatum_besluit is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003j) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze vervaldatum_besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze vervaldatum_besluit geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003k) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze zaakobject is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003k) Resultaattype met selectielijstklasse.procestermijn nihil en afleidingswijze zaakobject is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn nihil en afleidingswijze zaakobject geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003l) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze ander_datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003l) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze ander_datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze ander_datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003m) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze eigenschap is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003m) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze eigenschap is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze eigenschap geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003n) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze gerelateerde_zaak is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003n) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze gerelateerde_zaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze gerelateerde_zaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003o) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze hoofdzaak is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003o) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze hoofdzaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze hoofdzaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003p) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze ingangsdatum_besluit is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003p) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze ingangsdatum_besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze ingangsdatum_besluit geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003q) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze vervaldatum_besluit is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003q) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze vervaldatum_besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze vervaldatum_besluit geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003r) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze zaakobject is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003r) Resultaattype met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze zaakobject is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met selectielijstklasse.procestermijn ingeschatte_bestaansduur_object en afleidingswijze zaakobject geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    ",
															"    var succeed = false;",
															"    for(i=0; i<errors.length; i++) {",
															"        if(errors[i].name == \"nonFieldErrors\") {",
															"            if(errors[i].code == \"invalid-afleidingswijze-for-procestermijn\") {",
															"                pm.expect(errors[i].code).to.be.equal(\"invalid-afleidingswijze-for-procestermijn\");",
															"                succeed = true;",
															"                break;",
															"            }",
															"        }   ",
															"    }",
															"    if(!succeed) {",
															"        pm.expect.fail();",
															"    }",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003s) Resultaattype met afleidingswijze afgehandeld en selectielijstklasse.procestermijn vast_te_leggen_datum is mogelijk]\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003s) Resultaattype met afleidingswijze afgehandeld en selectielijstklasse.procestermijn leeg is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met brondatumArchiefprocedure.afleidingswijze afgehandeld en selectielijstklasse.procestermijn leeg geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-003t) Resultaattype met afleidingswijze termijn en selectielijstklasse.procestermijn leeg is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_leeg_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_leeg_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-003t) Resultaattype met afleidingswijze termijn en selectielijstklasse.procestermijn leeg is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met brondatumArchiefprocedure.afleidingswijze termijn en selectielijstklasse.procestermijn leeg geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"",
															"    let error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004a) Resultaattype met afleidingswijze eigenschap en geen datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_procestermijn_leeg_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_leeg_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-004",
									"item": [
										{
											"name": "(ztc-004a) Resultaattype met afleidingswijze eigenschap en geen datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze eigenschap en geen datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004b) Resultaattype met afleidingswijze eigenschap en een waarde voor datumkenmerk is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004b) Resultaattype met afleidingswijze eigenschap en een waarde voor datumkenmerk is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze eigenschap en een waarde voor datumkenmerk geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004c) Resultaattype met afleidingswijze zaakobject en geen datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004c) Resultaattype met afleidingswijze zaakobject en geen datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en geen datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004d) Resultaattype met afleidingswijze zaakobject en een waarde voor datumkenmerk is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004d) Resultaattype met afleidingswijze zaakobject en een waarde voor datumkenmerk is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en een waarde voor datumkenmerk geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004e) Resultaattype met afleidingswijze ander_datumkenmerk en geen datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004e) Resultaattype met afleidingswijze ander_datumkenmerk en geen datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en geen datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004f) Resultaattype met afleidingswijze ander_datumkenmerk en een waarde voor datumkenmerk is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004f) Resultaattype met afleidingswijze ander_datumkenmerk en een waarde voor datumkenmerk is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en een waarde voor datumkenmerk geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004g) Resultaattype met afleidingswijze afgehandeld en een waarde voor datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004g) Resultaattype met afleidingswijze afgehandeld en een waarde voor datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze afgehandeld en een waarde voor datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004h) Resultaattype met afleidingswijze gerelateerde_zaak en een waarde voor datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004h) Resultaattype met afleidingswijze gerelateerde_zaak en een waarde voor datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze gerelateerde_zaak en een waarde voor datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004i) Resultaattype met afleidingswijze hoofdzaak en een waarde voor datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004i) Resultaattype met afleidingswijze hoofdzaak en een waarde voor datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze hoofdzaak en een waarde voor datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004j) Resultaattype met afleidingswijze ingangsdatum_besluit en een waarde voor datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004j) Resultaattype met afleidingswijze ingangsdatum_besluit en een waarde voor datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ingangsdatum_besluit en een waarde voor datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004k) Resultaattype met afleidingswijze termijn en een waarde voor datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004k) Resultaattype met afleidingswijze termijn en een waarde voor datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en een waarde voor datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-004l) Resultaattype met afleidingswijze vervaldatum_besluit en een waarde voor datumkenmerk is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-004l) Resultaattype met afleidingswijze vervaldatum_besluit en een waarde voor datumkenmerk is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze vervaldatum_besluit en een waarde voor datumkenmerk geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.datumkenmerk\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    ",
															"    // TODO",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005a) Resultaattype met afleidingswijze afgehandeld en einddatumBekend true is onmogelijk\"]);",
															"    // pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ZTC) Delete Zaaktype\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-005",
									"item": [
										{
											"name": "(ztc-005a) Resultaattype met afleidingswijze afgehandeld en einddatumBekend true is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze afgehandeld en einddatumBekend true geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.einddatumBekend\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005b) Resultaattype met afleidingswijze afgehandeld en einddatumBekend false is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005b) Resultaattype met afleidingswijze afgehandeld en einddatumBekend false is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze afgehandeld en einddatumBekend false geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005c) Resultaattype met afleidingswijze termijn en einddatumBekend true is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_afgehandeld_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005c) Resultaattype met afleidingswijze termijn en einddatumBekend true is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en einddatumBekend true geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.einddatumBekend\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005d) Resultaattype met afleidingswijze termijn en einddatumBekend false is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005d) Resultaattype met afleidingswijze termijn en einddatumBekend false is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en einddatumBekend false geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005e) Resultaattype met afleidingswijze ander_datumkenmerk en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
															"body.selectielijstklasse = pm.globals.get(\"selectielijstklasse_procestermijn_nihil_url\");",
															"body.brondatumArchiefprocedure.afleidingswijze = \"termijn\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_termijn_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005e) Resultaattype met afleidingswijze ander_datumkenmerk en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005f) Resultaattype met afleidingswijze eigenschap en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005f) Resultaattype met afleidingswijze eigenschap en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze eigenschap en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005g) Resultaattype met afleidingswijze gerelateerde_zaak en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005g) Resultaattype met afleidingswijze gerelateerde_zaak en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze gerelateerde_zaak en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005h) Resultaattype met afleidingswijze hoofdzaak en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005h) Resultaattype met afleidingswijze hoofdzaak en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze hoofdzaak en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005i) Resultaattype met afleidingswijze ingangsdatum_besluit en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005i) Resultaattype met afleidingswijze ingangsdatum_besluit en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ingangsdatum_besluit en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005j) Resultaattype met afleidingswijze vervaldatum_besluit en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005j) Resultaattype met afleidingswijze vervaldatum_besluit en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze vervaldatum_besluit en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-005k) Resultaattype met afleidingswijze zaakobject en einddatumBekend true is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-005k) Resultaattype met afleidingswijze zaakobject en einddatumBekend true is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en einddatumBekend true geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006a) Resultaattype afleidingswijze zaakobject en geen objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-006",
									"item": [
										{
											"name": "(ztc-006a) Resultaattype afleidingswijze zaakobject en geen objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en geen objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006b) Resultaattype afleidingswijze zaakobject en een objecttype is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006b) Resultaattype afleidingswijze zaakobject en een objecttype is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en een objecttype geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006c) Resultaattype met afleidingswijze ander_datumkenmerk en geen objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006c) Resultaattype met afleidingswijze ander_datumkenmerk en geen objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en geen objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006d) Resultaattype met afleidingswijze ander_datumkenmerk en een objecttype is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006d) Resultaattype met afleidingswijze ander_datumkenmerk en een objecttype is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en een objecttype geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006e) Resultaattype met afleidingswijze afgehandeld en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006e) Resultaattype met afleidingswijze afgehandeld en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze afgehandeld en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006f) Resultaattype met afleidingswijze eigenschap en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006f) Resultaattype met afleidingswijze eigenschap en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze eigenschap en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006g) Resultaattype met afleidingswijze gerelateerde_zaak en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006g) Resultaattype met afleidingswijze gerelateerde_zaak en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze gerelateerde_zaak en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006h) Resultaattype met afleidingswijze hoofdzaak en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006h) Resultaattype met afleidingswijze hoofdzaak en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze hoofdzaak en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006i) Resultaattype met afleidingswijze ingangsdatum_besluit en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006i) Resultaattype met afleidingswijze ingangsdatum_besluit en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ingangsdatum_besluit en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006j) Resultaattype met afleidingswijze termijn en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006j) Resultaattype met afleidingswijze termijn en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-006k) Resultaattype met afleidingswijze vervaldatum_besluit en een waarde voor objecttype is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-006k) Resultaattype met afleidingswijze vervaldatum_besluit en een waarde voor objecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze vervaldatum_besluit en een waarde voor objecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.objecttype\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007a) Resultaattype met afleidingswijze ander_datumkenmerk en geen registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-007",
									"item": [
										{
											"name": "(ztc-007a) Resultaattype met afleidingswijze ander_datumkenmerk en geen registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en geen registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007b) Resultaattype met afleidingswijze ander_datumkenmerk en registratie is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007b) Resultaattype met afleidingswijze ander_datumkenmerk en registratie is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en registratie geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007c) Resultaattype met afleidingswijze afgehandeld en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007c) Resultaattype met afleidingswijze afgehandeld en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze afgehandeld en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007d) Resultaattype met afleidingswijze eigenschap en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007d) Resultaattype met afleidingswijze eigenschap en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze eigenschap en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007e) Resultaattype met afleidingswijze gerelateerde_zaak en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007e) Resultaattype met afleidingswijze gerelateerde_zaak en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze gerelateerde_zaak en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007f) Resultaattype met afleidingswijze hoofdzaak en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007f) Resultaattype met afleidingswijze hoofdzaak en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze hoofdzaak en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007g) Resultaattype met afleidingswijze ingangsdatum_besluit en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007g) Resultaattype met afleidingswijze ingangsdatum_besluit en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ingangsdatum_besluit en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007h) Resultaattype met afleidingswijze termijn en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007h) Resultaattype met afleidingswijze termijn en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007i) Resultaattype met afleidingswijze vervaldatum_besluit en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007i) Resultaattype met afleidingswijze vervaldatum_besluit en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze vervaldatum_besluit en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-007j) Resultaattype met afleidingswijze zaakobject en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-007j) Resultaattype met afleidingswijze zaakobject en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en registratie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.registratie\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008a) Resultaattype met afleidingswijze termijn en geen procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-008",
									"item": [
										{
											"name": "(ztc-008a) Resultaattype met afleidingswijze termijn en geen procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en geen procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008b) Resultaattype met afleidingswijze termijn en procestermijn is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008b) Resultaattype met afleidingswijze termijn en procestermijn is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze termijn en procestermijn geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008c) Resultaattype met afleidingswijze afgehandeld en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_afleidingswijze_termijn_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_ingeschatte_bestaansduur_object_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"termijn\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008c) Resultaattype met afleidingswijze afgehandeld en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze afgehandeld en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008d) Resultaattype met afleidingswijze ander_datumkenmerk en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_nihil_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"afgehandeld\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008d) Resultaattype met afleidingswijze ander_datumkenmerk en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ander_datumkenmerk en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008e) Resultaattype met afleidingswijze eigenschap en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ander_datumkenmerk\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008e) Resultaattype met afleidingswijze eigenschap en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze eigenschap en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008f) Resultaattype met afleidingswijze gerelateerde_zaak en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"eigenschap\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008f) Resultaattype met afleidingswijze gerelateerde_zaak en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze gerelateerde_zaak en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008g) Resultaattype met afleidingswijze hoofdzaak en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008g) Resultaattype met afleidingswijze hoofdzaak en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze hoofdzaak en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008h) Resultaattype met afleidingswijze ingangsdatum_besluit en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"hoofdzaak\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008h) Resultaattype met afleidingswijze ingangsdatum_besluit en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze ingangsdatum_besluit en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008i) Resultaattype met afleidingswijze vervaldatum_besluit en procestermijn is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"ingangsdatum_besluit\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008i) Resultaattype met afleidingswijze vervaldatum_besluit en procestermijn is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze vervaldatum_besluit en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-008j) Resultaattype met afleidingswijze zaakobject en registratie is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"vervaldatum_besluit\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-008j) Resultaattype met afleidingswijze zaakobject en registratie is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Resultaattype aanmaken met afleidingswijze zaakobject en procestermijn geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // TODO",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"brondatumArchiefprocedure.procestermijn\");",
															"    pm.expect(error.code).to.be.equal(\"must-be-empty\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ZTC) Delete Zaaktype\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{referentielijst_url}}/resultaattypeomschrijvingen/e6a0c939-3404-45b0-88e3-76c94fb80ea7\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_procestermijn_vast_te_leggen_datum_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"zaakobject\",\n\t\t\"procestermijn\": \"P5M\",\n\t\t\"datumkenmerk\": \"identificatie\",\n\t\t\"einddatumBekend\": true,\n\t\t\"objecttype\": \"pand\",\n\t\t\"registratie\": \"\"\n\t}\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/resultaattypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"resultaattypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-009",
									"item": [
										{
											"name": "Create concept Zaaktype to Publish",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
															"}",
															"",
															"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-009a) Zaaktype met concept False bijwerken is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.beginGeldigheid = \"2004-01-10\";",
															"body.eindeGeldigheid = \"2004-01-10\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009a) Zaaktype met concept False bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.beginGeldigheid = \"2004-01-10\";",
															"body.eindeGeldigheid = \"2004-01-10\";",
															"body.doel = \"aangepast doel\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype met concept False bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaaktype_url}}",
													"host": [
														"{{created_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009b) Zaaktype met concept False deels bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype met concept False deels bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaaktype_url}}",
													"host": [
														"{{created_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009c) Zaaktype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2004-12-12\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"eindeGeldigheid\": \"2004-12-12\"\n}"
												},
												"url": {
													"raw": "{{created_zaaktype_url}}",
													"host": [
														"{{created_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009d) Zaaktype met concept False verwijderen is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype met concept False verwijderen geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Besluittype to Publish\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{created_zaaktype_url}}",
													"host": [
														"{{created_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype to Publish",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
															"}",
															"",
															"pm.globals.set(\"besluittype_body\", pm.request.body.raw);",
															"postman.setNextRequest(\"(COMMON) Publish Besluittype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-009e) Besluittype met concept False bijwerken is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// // Retrieve the Zaak body template and modify as needed",
															"// var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"// body.eindeGeldigheid = \"2010-01-10\";",
															"",
															"// // Store the modified Zaak body, allowing it to be used in the main request",
															"// pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"catalogus\": \"{{catalogus_url}}\",\n    \"omschrijving\": \"test publish\",\n    \"zaaktypen\": [],\n\t\"publicatieIndicatie\": false,\n\t\"informatieobjecttypen\": [],\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009e) Besluittype met concept False bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.toelichting = \"aangepast\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype met concept False bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluittype_url}}",
													"host": [
														"{{created_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009f) Besluittype met concept False deels bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype met concept False deels bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"ja\"\n}"
												},
												"url": {
													"raw": "{{created_besluittype_url}}",
													"host": [
														"{{created_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009g) Besluittype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2020-01-01\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"eindeGeldigheid\": \"2020-01-01\"\n}"
												},
												"url": {
													"raw": "{{created_besluittype_url}}",
													"host": [
														"{{created_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009h) Besluittype met concept False verwijderen is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype met concept False verwijderen geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype to Publish\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{created_besluittype_url}}",
													"host": [
														"{{created_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Informatieobjecttype to Publish",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
															"}",
															"",
															"pm.globals.set(\"informatieobjecttype_body\", pm.request.body.raw);",
															"postman.setNextRequest(\"(COMMON) Publish Informatieobjecttype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-009i) Informatieobjecttype met concept False bijwerken is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"catalogus\": \"{{catalogus_url}}\",\n\t\"omschrijving\": \"publish test\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"beginGeldigheid\": \"2019-01-01\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009i) Informatieobjecttype met concept False bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
															"body.omschrijving = \"aangepast\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Informatieobjecttype met concept False bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobjecttype_url}}",
													"host": [
														"{{created_informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009j) Informatieobjecttype met concept False deels bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Informatieobjecttype met concept False deels bijwerken geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobjecttype_url}}",
													"host": [
														"{{created_informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009k) Informatieobjecttype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Informatieobjecttype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2020-01-01\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"eindeGeldigheid\": \"2020-01-01\"\n}"
												},
												"url": {
													"raw": "{{created_informatieobjecttype_url}}",
													"host": [
														"{{created_informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-009l) Informatieobjecttype met concept False verwijderen is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Informatieobjecttype met concept False verwijderen geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"non-concept-object\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype to relate to Besluittype\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{created_informatieobjecttype_url}}",
													"host": [
														"{{created_informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype to Publish Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
															"}",
															"",
															"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-009a) Zaaktype met concept False bijwerken is niet toegestaan\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.beginGeldigheid = \"2004-01-10\";",
															"body.eindeGeldigheid = \"2004-01-10\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-010",
									"item": [
										{
											"name": "besluittype",
											"item": [
												{
													"name": "Create Informatieobjecttype to relate to Besluittype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{informatieobjecttype_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Besluittype to relate to Informatieobjecttype",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010a) Besluittype gerelateerd aan Informatieobjecttype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010a) Besluittype gerelateerd aan Informatieobjecttype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.toelichting = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype gerelateerd aan Informatieobjecttype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010a) Besluittype gerelateerd aan Informatieobjecttype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype gerelateerd aan Informatieobjecttype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"ja\"\n}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010a) Besluittype gerelateerd aan Informatieobjecttype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype gerelateerd aan Informatieobjecttype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2022-01-01\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"eindeGeldigheid\": \"2022-01-01\"\n}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010a) Besluittype gerelateerd aan Informatieobjecttype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype gerelateerd aan Informatieobjecttype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Besluittype\", \"Create Zaaktype to Publish for Eigenschap\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "eigenschap",
											"item": [
												{
													"name": "Create Zaaktype to Publish for Eigenschap",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Eigenschap to relate to ZaakType",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_eigenschap_url\", pm.response.json().url);",
																	"pm.globals.set(\"eigenschap_body\", pm.request.body.raw);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010b) Eigenschap gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"naam\": \"test eigenschap3\",\n\t\"definitie\": \"test\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/eigenschappen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"eigenschappen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010b) Eigenschap gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"eigenschap_body\"));",
																	"body.toelichting = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Eigenschap gerelateerd aan Zaaktype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_eigenschap_url}}",
															"host": [
																"{{created_eigenschap_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010b) Eigenschap gerelateerd aan Zaaktype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Eigenschap gerelateerd aan Zaaktype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"ja\"\n}"
														},
														"url": {
															"raw": "{{created_eigenschap_url}}",
															"host": [
																"{{created_eigenschap_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010b) Eigenschap gerelateerd aan Zaaktype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Eigenschap gerelateerd aan Zaaktype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Eigenschap\", \"Create Informatieobjecttype to relate to Besluittype2\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_eigenschap_url}}",
															"host": [
																"{{created_eigenschap_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "informatieobjecttype",
											"item": [
												{
													"name": "Create Informatieobjecttype to relate to Besluittype2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"IOT publish test1\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Besluittype to relate to Informatieobjecttype",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Besluittype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010c) Informatieobjecttype gerelateerd aan Besluittype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010c) Informatieobjecttype gerelateerd aan Besluittype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Informatieobjecttype gerelateerd aan Besluittype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_informatieobjecttype_url}}",
															"host": [
																"{{created_informatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010c) Informatieobjecttype gerelateerd aan Besluittype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Informatieobjecttype gerelateerd aan Besluittype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"aangepast2\"\n}"
														},
														"url": {
															"raw": "{{created_informatieobjecttype_url}}",
															"host": [
																"{{created_informatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010c) Informatieobjecttype gerelateerd aan Besluittype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Informatieobjecttype gerelateerd aan Besluittype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2020-01-01\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"eindeGeldigheid\": \"2020-01-01\"\n}"
														},
														"url": {
															"raw": "{{created_informatieobjecttype_url}}",
															"host": [
																"{{created_informatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010c) Informatieobjecttype gerelateerd aan Besluittype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Informatieobjecttype gerelateerd aan Besluittype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Informatieobjecttype\", \"Create Zaaktype to Publish for Resultaattype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_informatieobjecttype_url}}",
															"host": [
																"{{created_informatieobjecttype_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "resultaattype",
											"item": [
												{
													"name": "Create Zaaktype to Publish for Resultaattype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype to relate to ZaakType",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
																	"pm.globals.set(\"resultaattype_body\", pm.request.body.raw);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010d) Resultaattype gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{resultaattypeomschrijving_url}}\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010d) Resultaattype gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
																	"body.omschrijving = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Resultaattype gerelateerd aan Zaaktype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_resultaattype_url}}",
															"host": [
																"{{created_resultaattype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010d) Resultaattype gerelateerd aan Zaaktype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Resultaattype gerelateerd aan Zaaktype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"aangepast2\"\n}"
														},
														"url": {
															"raw": "{{created_resultaattype_url}}",
															"host": [
																"{{created_resultaattype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010d) Resultaattype gerelateerd aan Zaaktype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Resultaattype gerelateerd aan Zaaktype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Create Zaaktype to Publish for Roltype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_resultaattype_url}}",
															"host": [
																"{{created_resultaattype_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "roltype",
											"item": [
												{
													"name": "Create Zaaktype to Publish for Roltype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Roltype to relate to ZaakType",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_roltype_url\", pm.response.json().url);",
																	"pm.globals.set(\"roltype_body\", pm.request.body.raw);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010e) Roltype gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"omschrijvingGeneriek\": \"adviseur\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/roltypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"roltypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010e) Roltype gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"roltype_body\"));",
																	"body.omschrijving = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Roltype gerelateerd aan Zaaktype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_roltype_url}}",
															"host": [
																"{{created_roltype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010e) Roltype gerelateerd aan Zaaktype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Roltype gerelateerd aan Zaaktype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"aangepast2\"\n}"
														},
														"url": {
															"raw": "{{created_roltype_url}}",
															"host": [
																"{{created_roltype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010e) Roltype gerelateerd aan Zaaktype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Roltype gerelateerd aan Zaaktype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Roltype\", \"Create Zaaktype to Publish for Statustype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_roltype_url}}",
															"host": [
																"{{created_roltype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "statustype",
											"item": [
												{
													"name": "Create Zaaktype to Publish for Statustype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Statustype to relate to ZaakType",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_statustype_url\", pm.response.json().url);",
																	"pm.globals.set(\"statustype_body\", pm.request.body.raw);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010f) Statustype gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"volgnummer\": 1\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010f) Statustype gerelateerd aan Zaaktype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"statustype_body\"));",
																	"body.omschrijving = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Statustype gerelateerd aan Zaaktype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_statustype_url}}",
															"host": [
																"{{created_statustype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010f) Statustype gerelateerd aan Zaaktype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Statustype gerelateerd aan Zaaktype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"aangepast2\"\n}"
														},
														"url": {
															"raw": "{{created_statustype_url}}",
															"host": [
																"{{created_statustype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010f) Statustype gerelateerd aan Zaaktype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Statustype gerelateerd aan Zaaktype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Statustype\", \"Create Zaaktype to create Zaak-Informatieobjecttype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_statustype_url}}",
															"host": [
																"{{created_statustype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zaaktype-informatieobjecttype",
											"item": [
												{
													"name": "Create Zaaktype to create Zaak-Informatieobjecttype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype to Publish for ZIOT",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Create Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Publish Informatieobjecttype\", \"(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False bijwerken is mogelijk\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"ZIOT publish tests\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False bijwerken is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"ziot_body\"));",
																	"body.richting = \"intern\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False bijwerken geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().richting).to.be.equal(\"intern\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False deels bijwerken is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False deels bijwerken geeft 200\", function() {",
																	"    pm.response.to.have.status(200); ",
																	"    pm.expect(pm.response.json().volgnummer).to.be.equal(2);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False verwijderen is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype met concept False verwijderen geeft 204\", function() {",
																	"    pm.response.to.have.status(204); ",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype to Publish for ZIOT2\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype to Publish for ZIOT2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [",
																	"    \"(COMMON) Create Zaaktype-Informatieobjecttype\",",
																	"    \"(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False bijwerken is mogelijk\"",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"ZIOT publish tests\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False bijwerken is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"ziot_body\"));",
																	"body.richting = \"intern\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False bijwerken geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().richting).to.be.equal(\"intern\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False deels bijwerken is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False deels bijwerken geeft 200\", function() {",
																	"    pm.response.to.have.status(200); ",
																	"    pm.expect(pm.response.json().volgnummer).to.be.equal(2);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False verwijderen is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Zaaktype met concept False verwijderen geeft 204\", function() {",
																	"    pm.response.to.have.status(204); ",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype to Publish for ZIOT2\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype to Publish for ZIOT2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Create Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [",
																	"    \"(COMMON) Publish Informatieobjecttype\", ",
																	"    \"(COMMON) Publish Zaaktype\", ",
																	"    \"(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False bijwerken is niet toegestaan\"",
																	"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"ziot_body\"));",
																	"body.richting = \"intern\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"volgnummer\": 2\n}"
														},
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010g) Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype gerelateerd aan Informatieobjecttype en Zaaktype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Create Besluittype to Publish for Zaaktype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_zaakinformatieobjecttype_url}}",
															"host": [
																"{{created_zaakinformatieobjecttype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zaaktype",
											"item": [
												{
													"name": "Create Besluittype to Publish for Zaaktype",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_besluittype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{besluittype_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype to relate to Besluittype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Besluittype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-010h) Zaaktype gerelateerd aan Besluittype met concept False bijwerken is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"body.besluittypen = [\"{{created_besluittype_url}}\"];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Besluittype met concept False bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.eindeGeldigheid = \"2010-01-10\";",
																	"body.omschrijving = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Besluittype met concept False bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Besluittype met concept False deels bijwerken is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Besluittype met concept False deels bijwerken geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"aangepast2\"\n}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Besluittype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Besluittype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2004-12-12\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"eindeGeldigheid\": \"2004-12-12\"\n}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Besluittype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Besluittype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype to Publish for Zaaktype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype to Publish for Zaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Create Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Publish Informatieobjecttype\", \"(ztc-010h) Zaaktype gerelateerd aan Informatieobjecttype met concept False bijwerken is toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{informatieobjecttype_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Informatieobjecttype met concept False bijwerken is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.eindeGeldigheid = \"2010-01-10\";",
																	"body.omschrijving = \"aangepast\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Informatieobjecttype met concept False bijwerken geeft 200\", function() {",
																	"    pm.response.to.have.status(200); ",
																	"    pm.expect(pm.response.json().omschrijving).to.be.equal(\"aangepast\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Informatieobjecttype met concept False deels bijwerken is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Informatieobjecttype met concept False deels bijwerken geeft 200\", function() {",
																	"    pm.response.to.have.status(200);     ",
																	"    pm.expect(pm.response.json().omschrijving).to.be.equal(\"aangepast2\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"omschrijving\": \"aangepast2\"\n}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Informatieobjecttype met concept False deels bijwerken met eindeGeldigheid is toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Informatieobjecttype met concept False deels bijwerken met eindeGeldigheid geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().eindeGeldigheid).to.be.equal(\"2004-12-12\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"eindeGeldigheid\": \"2004-12-12\"\n}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-010h) Zaaktype gerelateerd aan Informatieobjecttype met concept False verwijderen is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype gerelateerd aan Informatieobjecttype met concept False verwijderen geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Create Zaaktype for Besluittype relation creation\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "ztc-011",
									"item": [
										{
											"name": "besluittype",
											"item": [
												{
													"name": "Create Zaaktype for Besluittype relation creation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011a) Besluittype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011a) Besluittype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.zaaktypen = [pm.globals.get(\"created_zaaktype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype aanmaken met relatie naar Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype for Besluittype relation creation\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype for Besluittype relation creation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011a) Besluittype aanmaken met relatie naar Informatieobjecttype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{informatieobjecttype_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011a) Besluittype aanmaken met relatie naar Informatieobjecttype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype aanmaken met relatie naar Informatieobjecttype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Besluittype for concept relation tests\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Besluittype for concept relation tests",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_besluittype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{besluittype_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011a) Besluittype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.zaaktypen = [pm.globals.get(\"created_zaaktype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011a) Besluittype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktypen\": [\"{{created_zaaktype_url}}\"]\n}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011a) Besluittype bijwerken relatie leggen met Informatieobjecttype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
																	"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011a) Besluittype deels bijwerken relatie leggen met Informatieobjecttype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Besluittype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"(COMMON) Delete Besluittype\", \"Create Zaaktype for Eigenschap relation creation\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttypen\": [\"{{created_informatieobjecttype_url}}\"]\n}"
														},
														"url": {
															"raw": "{{created_besluittype_url}}",
															"host": [
																"{{created_besluittype_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "eigenschap",
											"item": [
												{
													"name": "Create Zaaktype for Eigenschap relation creation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011b) Eigenschap aanmaken met relatie naar Zaaktype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011b) Eigenschap aanmaken met relatie naar Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Eigenschap aanmaken met relatie naar Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_eigenschap_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Eigenschap\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Eigenschap for concept relation tests\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"naam\": \"test eigenschap3\",\n\t\"definitie\": \"test\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/eigenschappen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"eigenschappen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Eigenschap for concept relation tests",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_eigenschap_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"naam\": \"test eigenschap3\",\n\t\"definitie\": \"test\",\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/eigenschappen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"eigenschappen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011b) Eigenschap bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Eigenschap bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"naam\": \"test eigenschap3\",\n\t\"definitie\": \"test\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n    \"specificatie\": {\n        \"formaat\": \"tekst\",\n        \"lengte\": \"5\",\n        \"kardinaliteit\": \"1\",\n        \"waardenverzameling\": [\"test\"]\n    }\n}"
														},
														"url": {
															"raw": "{{created_eigenschap_url}}",
															"host": [
																"{{created_eigenschap_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011b) Eigenschap deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Eigenschap deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Eigenschap\", \"Create Zaaktype for Resultaattype relation creation\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_eigenschap_url}}",
															"host": [
																"{{created_eigenschap_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "resultaattype",
											"item": [
												{
													"name": "Create Zaaktype for Resultaattype relation creation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011c) Resultaattype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011c) Resultaattype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Resultaattype aanmaken met relatie naar Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Resultaattype\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Resultaattype for concept relation tests\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"TEST\",\n\t\"resultaattypeomschrijving\": \"{{resultaattypeomschrijving_url}}\",\n\t\"selectielijstklasse\": \"{{selectielijstklasse_url}}\",\n\t\"brondatumArchiefprocedure\": {\n\t\t\"afleidingswijze\": \"gerelateerde_zaak\",\n\t\t\"procestermijn\": null,\n\t\t\"datumkenmerk\": \"\",\n\t\t\"einddatumBekend\": false,\n\t\t\"objecttype\": \"\",\n\t\t\"registratie\": \"\"\n\t}\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Resultaattype for concept relation tests",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
																	"body.zaaktype = pm.globals.get(\"zaaktype_url\");",
																	"body.omschrijving = \"concept tests\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_resultaattype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/resultaattypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"resultaattypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011c) Resultaattype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"resultaattype_body\"));",
																	"body.zaaktype = pm.globals.get(\"created_zaaktype_url\");",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Resultaattype bijwerken relatie leggen met Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_resultaattype_url}}",
															"host": [
																"{{created_resultaattype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011c) Resultaattype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Resultaattype deels bijwerken relatie leggen met Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Resultaattype\", \"Create Zaaktype for Roltype relation creation\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_resultaattype_url}}",
															"host": [
																"{{created_resultaattype_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "roltype",
											"item": [
												{
													"name": "Create Zaaktype for Roltype relation creation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011d) Roltype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011d) Roltype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Roltype aanmaken met relatie naar Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_roltype_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Roltype\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Eigenschap for concept relation tests\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"omschrijvingGeneriek\": \"adviseur\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/roltypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"roltypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Roltype for concept relation tests",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_roltype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"omschrijvingGeneriek\": \"adviseur\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/roltypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"roltypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011d) Roltype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Roltype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"omschrijvingGeneriek\": \"adviseur\"\n}"
														},
														"url": {
															"raw": "{{created_roltype_url}}",
															"host": [
																"{{created_roltype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011d) Roltype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Roltype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Roltype\", \"Create Zaaktype for Statustype relation creation\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_roltype_url}}",
															"host": [
																"{{created_roltype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "statustype",
											"item": [
												{
													"name": "Create Zaaktype for Statustype relation creation",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011e) Statustype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011e) Statustype aanmaken met relatie naar Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Statustype aanmaken met relatie naar Zaaktype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_statustype_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Statustype\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Eigenschap for concept relation tests\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"volgnummer\": 1\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Statustype for concept relation tests",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_statustype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"volgnummer\": 1\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/statustypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"statustypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011e) Statustype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Statustype bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"omschrijving\": \"test\",\n\t\"volgnummer\": 1\n}"
														},
														"url": {
															"raw": "{{created_statustype_url}}",
															"host": [
																"{{created_statustype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011e) Statustype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Statustype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-zaaktype\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Statustype\", \"Create Zaaktype to publish for ZIOT\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_statustype_url}}",
															"host": [
																"{{created_statustype_url}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										},
										{
											"name": "zaaktype-informatieobjecttype",
											"item": [
												{
													"name": "Create Zaaktype to publish for ZIOT",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype for ZIOT\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype for ZIOT",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"ZIOT publish test1\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype aanmaken met Zaaktype met concept False is mogelijk",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype aanmaken met Zaaktype met concept False geeft 201\", function() {",
																	"    pm.response.to.have.status(201); ",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype for ZIOT\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype for ZIOT",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011f) Zaaktype-Informatieobjecttype aanmaken met Informatieobjecttype met concept False is mogelijk\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype aanmaken met Informatieobjecttype met concept False is mogelijk",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype aanmaken met Informatieobjecttype met concept False geeft 201\", function() {",
																	"    pm.response.to.have.status(201); ",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype to publish for ZIOT\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype to publish for ZIOT",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Publish Zaaktype\", \"(ztc-011f) Zaaktype-Informatieobjecttype aanmaken met Zaaktype en Informatieobjecttype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"ZIOT publish test2\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype aanmaken met Zaaktype en Informatieobjecttype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype aanmaken met Zaaktype en Informatieobjecttype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Create Zaaktype for ZIOT2\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype for ZIOT2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"initial_zaaktype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype for ZIOT2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"initial_informatieobjecttype_url\", pm.response.json().url);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.omschrijving = \"ZIOT publish test3\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype-Informatieobjecttype to update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_ziot_url\", pm.response.json().url);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{initial_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{initial_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype to publish for ZIOT2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Informatieobjecttype to publish for ZIOT2\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"body.omschrijving = \"ZIOT publish test4\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Informatieobjecttype to publish for ZIOT2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
																	"}",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011f) Zaaktype-Informatieobjecttype bijwerken met Zaaktype met concept False is mogelijk\"]);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"body.omschrijving = \"ZIOT publish test4\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype bijwerken met Zaaktype met concept False is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"ziot_body\"));",
																	"body.zaaktype = \"{{created_zaaktype_url}}\";",
																	"body.informatieobjecttype = \"{{initial_informatieobjecttype_url}}\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype bijwerken met Zaaktype met concept False geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().zaaktype).to.be.equal(pm.globals.get(\"created_zaaktype_url\"));",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype-Informatieobjecttype to update2\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_ziot_url}}",
															"host": [
																"{{created_ziot_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype-Informatieobjecttype to update2",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_ziot_url\", pm.response.json().url);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{initial_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{initial_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype bijwerken met Informatieobjecttype met concept False is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"ziot_body\"));",
																	"body.zaaktype = \"{{initial_zaaktype_url}}\";",
																	"body.informatieobjecttype = \"{{created_informatieobjecttype_url}}\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype bijwerken met Informatieobjecttype met concept False geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().informatieobjecttype).to.be.equal(pm.globals.get(\"created_informatieobjecttype_url\"));",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype-Informatieobjecttype to update3\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_ziot_url}}",
															"host": [
																"{{created_ziot_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype-Informatieobjecttype to update3",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_ziot_url\", pm.response.json().url);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{initial_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{initial_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype deels bijwerken met Zaaktype met concept False is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype deels bijwerken met Zaaktype met concept False geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().zaaktype).to.be.equal(pm.globals.get(\"created_zaaktype_url\"));",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype-Informatieobjecttype to update4\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_ziot_url}}",
															"host": [
																"{{created_ziot_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype-Informatieobjecttype to update4",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_ziot_url\", pm.response.json().url);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{initial_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{initial_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype bijwerken met Informatieobjecttype met concept False is mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype deels bijwerken met Informatieobjecttype met concept False geeft 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"    pm.expect(pm.response.json().informatieobjecttype).to.be.equal(pm.globals.get(\"created_informatieobjecttype_url\"));",
																	"});",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Zaaktype-Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaaktype-Informatieobjecttype to update5\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_ziot_url}}",
															"host": [
																"{{created_ziot_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype-Informatieobjecttype to update5",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_ziot_url\", pm.response.json().url);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{initial_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{initial_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktype-informatieobjecttypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype bijwerken met Zaaktype en Informatieobjecttype met concept False is niet mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"ziot_body\"));",
																	"body.zaaktype = \"{{created_zaaktype_url}}\";",
																	"body.informatieobjecttype = \"{{created_informatieobjecttype_url}}\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype bijwerken met Zaaktype en Informatieobjecttype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400);",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_ziot_url}}",
															"host": [
																"{{created_ziot_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011f) Zaaktype-Informatieobjecttype bijwerken met Zaaktype en Informatieobjecttype met concept False is niet mogelijk",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype-Informatieobjecttype deels bijwerken met Zaaktype en Informatieobjecttype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400);",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\"\n}"
														},
														"url": {
															"raw": "{{created_ziot_url}}",
															"host": [
																"{{created_ziot_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete initial Zaaktype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.unset(\"initial_zaaktype_url\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{initial_zaaktype_url}}",
															"host": [
																"{{initial_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Delete initial Informatieobjecttype",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.unset(\"initial_informatieobjecttype_url\");",
																	"",
																	"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Create Besluittype for Zaaktype relation creation\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{initial_informatieobjecttype_url}}",
															"host": [
																"{{initial_informatieobjecttype_url}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "zaaktype",
											"item": [
												{
													"name": "Create Besluittype for Zaaktype relation creation",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
																	"",
																	"postman.setNextRequest(\"(COMMON) Publish Besluittype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-011g) Zaaktype aanmaken met relatie naar Besluittype met concept False is niet toegestaan\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{besluittype_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/besluittypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"besluittypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011g) Zaaktype aanmaken met relatie naar Besluittype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"body.besluittypen = [pm.globals.get(\"created_besluittype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype aanmaken met relatie naar Besluittype met concept False geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"if(pm.response.code == 201) {",
																	"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
																	"    postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
																	"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Eigenschap for concept relation tests\"]);",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Zaaktype for concept relation tests",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{ztc_url}}/zaaktypen",
															"host": [
																"{{ztc_url}}"
															],
															"path": [
																"zaaktypen"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011g) Zaaktype bijwerken relatie leggen met Informatieobjecttype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"// Retrieve the Zaak body template and modify as needed",
																	"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
																	"body.beginGeldigheid = \"2004-01-10\";",
																	"body.eindeGeldigheid = \"2004-01-10\";",
																	"body.besluittypen = [pm.globals.get(\"created_besluittype_url\")];",
																	"",
																	"// Store the modified Zaak body, allowing it to be used in the main request",
																	"pm.globals.set(\"request_body\", JSON.stringify(body));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype bijwerken relatie leggen met Informatieobjecttype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{request_body}}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "(ztc-011g) Zaaktype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Zaaktype deels bijwerken relatie leggen met Zaaktype met concept False is niet toegestaan geeft 400\", function() {",
																	"    pm.response.to.have.status(400); ",
																	"    ",
																	"    var error = pm.response.json()[\"invalidParams\"][0];",
																	"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
																	"    pm.expect(error.code).to.be.equal(\"non-concept-relation\");",
																	"});",
																	"",
																	"postman.setNextRequest(\"Create Besluittype to relate to published Zaaktype\");",
																	"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Besluittype\", \"(ZTC) Delete Zaaktype\"]);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{jwt_token_without_claims}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"besluittypen\": [\"{{created_besluittype_url}}\"]\n}"
														},
														"url": {
															"raw": "{{created_zaaktype_url}}",
															"host": [
																"{{created_zaaktype_url}}"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "ztc-012",
									"item": [
										{
											"name": "Create Besluittype to relate to published Zaaktype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [];",
															"body.omschrijving = \"ztc-012 tests\"",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluittype_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype to relate to Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.beginGeldigheid = \"2004-01-10\";",
															"body.eindeGeldigheid = \"2004-01-10\";",
															"body.omschrijving = \"ztc-012\"",
															"body.besluittypen = [\"{{created_besluittype_url}}\"];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-012a) Zaaktype met gerelateerd concept Besluittype publiceren geeft 400",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype met gerelateerd concept Besluittype publiceren geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.code).to.be.equal(\"concept-relation\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Create Informatieobjecttype to relate to published Zaaktype\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{created_zaaktype_url}}/publish",
													"host": [
														"{{created_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Informatieobjecttype to relate to published Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobjecttype_url\", pm.response.json().url);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
															"body.omschrijving = \"ztc-012 tests\"",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype to relate to Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
															"}",
															"",
															"postman.setNextRequest(\"(COMMON) Create Zaaktype-Informatieobjecttype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-012b) Zaaktype met gerelateerd concept Informatieobjecttype publiceren geeft 400\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.beginGeldigheid = \"2004-01-10\";",
															"body.eindeGeldigheid = \"2004-01-10\";",
															"body.omschrijving = \"ztc-012b\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-012b) Zaaktype met gerelateerd concept Informatieobjecttype publiceren geeft 400",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype met gerelateerd concept Besluittype publiceren geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.code).to.be.equal(\"concept-relation\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Informatieobjecttype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(COMMON) Delete Zaaktype\", \"Retrieve different Catalogus\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{created_zaaktype_url}}/publish",
													"host": [
														"{{created_zaaktype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "ztc-013",
									"item": [
										{
											"name": "Retrieve different Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype2_url\");",
															"pm.globals.unset(\"informatieobjecttype2_url\");",
															"",
															"if(pm.response.json().count) {",
															"    var catalogus = pm.response.json().results[0];",
															"    pm.globals.set(\"catalogus2_url\", catalogus.url);",
															"    postman.setNextRequest(\"Create Zaaktype for catalogus 1\");",
															"    ",
															"    if(catalogus.besluittypen) {",
															"        for(i=0; i<catalogus.besluittypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.besluittypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"besluittype_url\", catalogus.besluittypen[0]);",
															"    }",
															"    if(catalogus.informatieobjecttypen) {",
															"        for(i=0; i<catalogus.informatieobjecttypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.informatieobjecttypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"    if(catalogus.zaaktypen) {",
															"        for(i=0; i<catalogus.zaaktypen.length; i++) {",
															"            pm.sendRequest({",
															"                \"url\": catalogus.zaaktypen[i],",
															"                \"method\": \"DELETE\",",
															"                \"header\": {",
															"                    \"Authorization\": \"Bearer \" + pm.globals.get(\"jwt_token\")",
															"                }",
															"            });",
															"        }",
															"        // pm.globals.set(\"informatieobjecttype_url\", catalogus.informatieobjecttypen[0]);",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{ztc_url}}/catalogussen?domein=ZGWTT",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													],
													"query": [
														{
															"key": "domein",
															"value": "ZGWTT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create different Catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"catalogus2_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"domein\": \"ZGWTT\",\n\t\"rsin\": \"000000000\",\n\t\"contactpersoonBeheerNaam\": \"Test Persoon\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype for catalogus 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.besluittypen = [];",
															"body.omschrijving = \"ztc-013\"",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaaktype1_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype for catalogus 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.besluittypen = [];",
															"body.omschrijving = \"ztc-013\"",
															"body.catalogus = pm.globals.get(\"catalogus2_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaaktype2_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype for catalogus 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"zrc-013a\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluittype1_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluittype for catalogus 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [];",
															"body.catalogus = pm.globals.get(\"catalogus2_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_besluittype2_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Informatieobjecttype for catalogus 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobjecttype1_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Informatieobjecttype for catalogus 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"informatieobjecttype_body\"));",
															"body.catalogus = pm.globals.get(\"catalogus2_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_informatieobjecttype2_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013a) Besluittype aanmaken met relatie naar Zaaktype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [pm.globals.get(\"created_zaaktype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"ztc-013a\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype aanmaken met relatie naar Zaaktype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-013b) Besluittype bijwerken met relatie naar Zaaktype uit andere catalogus is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013b) Besluittype bijwerken met relatie naar Zaaktype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [pm.globals.get(\"created_zaaktype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"ztc-013a\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype bijwerken met relatie naar Zaaktype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluittype1_url}}",
													"host": [
														"{{created_besluittype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013c) Besluittype deels bijwerken met relatie naar Zaaktype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype deels bijwerken met relatie naar Zaaktype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktypen\": [\"{{created_zaaktype2_url}}\"]\n}"
												},
												"url": {
													"raw": "{{created_besluittype1_url}}",
													"host": [
														"{{created_besluittype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013d) Besluittype aanmaken met relatie naar Informatieobjecttype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [];",
															"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"ztc-013a\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype aanmaken met relatie naar Informatieobjecttype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluittype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluittype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-013e) Besluittype bijwerken met relatie naar Informatieobjecttype uit andere catalogus is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/besluittypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"besluittypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013e) Besluittype bijwerken met relatie naar Informatieobjecttype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [];",
															"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"ztc-013a\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype bijwerken met relatie naar Informatieobjecttype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluittype1_url}}",
													"host": [
														"{{created_besluittype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013f) Besluittype deels bijwerken met relatie naar Informatieobjecttype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluittype_body\"));",
															"body.zaaktypen = [];",
															"body.informatieobjecttypen = [pm.globals.get(\"created_informatieobjecttype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"// body.omschrijving = \"ztc-013a\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Besluittype deels bijwerken met relatie naar Informatieobjecttype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktypen\": [\"{{created_zaaktype2_url}}\"]\n}"
												},
												"url": {
													"raw": "{{created_besluittype1_url}}",
													"host": [
														"{{created_besluittype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013g) Zaaktype aanmaken met relatie naar Besluittype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.besluittypen = [pm.globals.get(\"created_besluittype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"ztc-013g\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype aanmaken met relatie naar Besluittype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaaktype_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaaktype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-013h) Zaaktype bijwerken met relatie naar Besluittype uit andere catalogus is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013h) Zaaktype bijwerken met relatie naar Besluittype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaaktype_body\"));",
															"body.besluittypen = [pm.globals.get(\"created_besluittype2_url\")];",
															"body.catalogus = pm.globals.get(\"catalogus_url\");",
															"body.omschrijving = \"ztc-013g\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype bijwerken met relatie naar Besluittype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaaktype1_url}}",
													"host": [
														"{{created_zaaktype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013i) Zaaktype deels bijwerken met relatie naar Besluittype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype deels bijwerken met relatie naar Besluittype uit andere catalogus geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluittypen\": [\"{{created_besluittype2_url}}\"]\n}"
												},
												"url": {
													"raw": "{{created_zaaktype1_url}}",
													"host": [
														"{{created_zaaktype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013j) Zaaktype-Informatieobjecttype aanmaken met Zaaktype en Informatieobjecttype uit verschillende catalogi is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype-Informatieobjecttype aanmaken met Zaaktype en Informatieobjecttype uit verschillende catalogi geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_ziot_url\", pm.response.json().url);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaaktype-Informatieobjecttype\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ztc-013h) Zaaktype bijwerken met relatie naar Besluittype uit andere catalogus is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype1_url}}\",\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype2_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktype-informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaaktype-InformatieObjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_ziot_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype1_url}}\",\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype1_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktype-informatieobjecttypen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013k) Zaaktype-Informatieobjecttype bijwerken met Zaaktype en Informatieobjecttype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype-Informatieobjecttype bijwerken met Zaaktype en Informatieobjecttype uit verschillende catalogi geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype1_url}}\",\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype2_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{created_ziot_url}}",
													"host": [
														"{{created_ziot_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ztc-013l) Zaaktype-Informatieobjecttype deels bijwerken met Zaaktype en Informatieobjecttype uit andere catalogus is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Zaaktype-Informatieobjecttype bijwerken met Zaaktype en Informatieobjecttype uit verschillende catalogi geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    ",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"relations-incorrect-catalogus\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete Zaaktype-Informatieobjecttype\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete Zaaktype1\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{created_zaaktype1_url}}\",\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype2_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_ziot_url}}",
													"host": [
														"{{created_ziot_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaaktype1_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaaktype1_url}}",
													"host": [
														"{{created_zaaktype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaaktype2_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaaktype2_url}}",
													"host": [
														"{{created_zaaktype2_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluittype1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluittype1_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluittype1_url}}",
													"host": [
														"{{created_besluittype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluittype2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluittype2_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluittype2_url}}",
													"host": [
														"{{created_besluittype2_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Informatieobjecttype1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_informatieobjecttype1_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobjecttype1_url}}",
													"host": [
														"{{created_informatieobjecttype1_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Informatieobjecttype2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_informatieobjecttype2_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobjecttype2_url}}",
													"host": [
														"{{created_informatieobjecttype2_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "(ZTC) Delete Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_url}}",
													"host": [
														"{{zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Applicatie for concept tests",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"applicatie_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{applicatie_url}}",
													"host": [
														"{{applicatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZTC) Delete Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluittype_url}}",
													"host": [
														"{{besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(ZTC) Delete Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for afleidingswijze afgehandeld",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_afleidingswijze_afgehandeld_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_afleidingswijze_afgehandeld_url}}",
													"host": [
														"{{zaaktype_afleidingswijze_afgehandeld_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for afleidingswijze termijn",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_afleidingswijze_termijn_url\");",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_afleidingswijze_termijn_url}}",
													"host": [
														"{{zaaktype_afleidingswijze_termijn_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaaktype for empty procestermijn",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"zaaktype_procestermijn_leeg_url\");",
															"",
															"// Stop collection runner",
															"postman.setNextRequest(null);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_procestermijn_leeg_url}}",
													"host": [
														"{{zaaktype_procestermijn_leeg_url}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Delete Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_zaaktype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaaktype_url}}",
													"host": [
														"{{created_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Resultaattype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_resultaattype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_resultaattype_url}}",
													"host": [
														"{{created_resultaattype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_besluittype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{created_besluittype_url}}",
													"host": [
														"{{created_besluittype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_informatieobjecttype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobjecttype_url}}",
													"host": [
														"{{created_informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Eigenschap",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_eigenschap_url}}\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_eigenschap_url}}",
													"host": [
														"{{created_eigenschap_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Statustype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_statustype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_statustype_url}}",
													"host": [
														"{{created_statustype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Roltype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_roltype_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_roltype_url}}",
													"host": [
														"{{created_roltype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Zaaktype-Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.unset(\"created_ziot_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{created_ziot_url}}",
													"host": [
														"{{created_ziot_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Publish Besluittype",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{created_besluittype_url}}/publish",
													"host": [
														"{{created_besluittype_url}}"
													],
													"path": [
														"publish"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Create Zaaktype-Informatieobjecttype",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobjecttype_url\", pm.response.json().url);",
															"pm.globals.set(\"ziot_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobjecttype\": \"{{created_informatieobjecttype_url}}\",\n\t\"zaaktype\": \"{{created_zaaktype_url}}\",\n\t\"volgnummer\": 1,\n\t\"richting\": \"inkomend\"\n}"
												},
												"url": {
													"raw": "{{ztc_url}}/zaaktype-informatieobjecttypen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"zaaktype-informatieobjecttypen"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									]
								}
							],
							"description": "Bevat alle business logic tests voor de Zaaktypecatalogus (ZTC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "Deze folder bevat de Postman test suite voor de ZGW API's, elke folder bevat tests voor de business logic zoals die gespecificeerd is in https://github.com/VNG-Realisatie/gemma-zaken/tree/master/docs/_content/standaard.\n\nDe variabelen voor de urls naar de individuele componenten zijn standaard gezet op http://ref.tst.vng.cloud/, maar kunnen lokaal veranderd worden naar bijv. localhost voor test doeleinden.\n\nDe namen van de folders (bijv. **zrc/zrc-001**) verwijzen naar de specificaties in de link hierboven, zo zijn de tests te koppelen aan de specificaties.\n\nAlle requests met een prefix zoals **(zrc-xxx)** (of een andere ZGW api) bevatten tests, alle andere requests zijn ter ondersteuning van die requests en bevatten dus geen tests.\n\n**LET OP:** voor deze tests zijn de environment variabelen `client_id` en `secret` nodig, dit moeten credentials zijn die geregistreerd zijn binnen de Autorisaties API, en hiervoor moet dus ook een bestaande applicatie met superuser rechten aanwezig zijn in het systeem. Aan de hand van deze credentials wordt binnen de testsuite een JSON Web Token gegenereerd, die vervolgens gebruikt wordt in de Authorization headers van iedere API call\n\nOpmerkingen:\n- (WIP) houdt in dat de test nog niet correct geimplementeerd is.\n- (NI) houdt in dat de test faalt omdat de business logic nog niet geimplementeerd is in de desbetreffende API's.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if(pm.response.status >= 400) {",
									"    console.log(pm.response.text());",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "mock requests",
			"item": [
				{
					"name": "mock 200",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mock_url}}/200",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"200"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock 404",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mock_url}}/404",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"404"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock Zaaktype",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mock_url}}/zaaktype",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"zaaktype"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock Zaak",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mock_url}}/zaak",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"zaak"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock Communicatiekanaal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mock_url}}/communicatiekanaal",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"communicatiekanaal"
							]
						}
					},
					"response": []
				}
			],
			"description": "Deze folder bevat mocks die het implementeren van de tests makkelijker maken.\n\nTODO: zit nu op gratis Postman, moet upgraden voor unlimited mock requests",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"// if (typeof pm.globals.get('jwt_token') === 'undefined' || typeof pm.globals.get('jwt_token') === \"object\" ) {",
					"",
					"// const requestBody = {",
					"//   \"clientIds\": [",
					"//     \"allthescopesarebelongtous222223132532\"",
					"//   ],",
					"// \t\"secret\": \"sosecret\",",
					"//   \"label\": \"user\",",
					"//   \"heeftAlleAutorisaties\": true,",
					"//   \"autorisaties\": [],",
					"// }",
					"",
					"// pm.sendRequest({",
					"//   url: pm.environment.get(\"token-issuer_url\"), // Replace with your API endpoint URL",
					"//   method: 'POST',",
					"//   header: {",
					"//     'Content-Type': 'application/json'",
					"//   },",
					"//   body: {",
					"//     mode: 'raw',",
					"//     raw: JSON.stringify(requestBody)",
					"//   }",
					"// }, (err, response) => {",
					"//   if (err) {",
					"//     console.error(err);",
					"//     return;",
					"//   }",
					"",
					"//   const responseBody = JSON.parse(response.text());",
					"//   const extractedValue = responseBody.authorization; ",
					"//   var bearer_and_token = extractedValue.split(' ');",
					"//   var jwt_token = bearer_and_token[1]",
					"",
					"//   pm.globals.set('jwt_token', jwt_token);",
					"//   pm.globals.set('jwt_token_without_claims', jwt_token);",
					"",
					"  ",
					"// })",
					"// }"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}